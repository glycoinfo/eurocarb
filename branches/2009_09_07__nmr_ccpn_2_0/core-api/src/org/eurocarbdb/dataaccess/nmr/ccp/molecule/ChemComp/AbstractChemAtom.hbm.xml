<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
  "-//Hibernate/Hibernate Mapping DTD//EN"
  "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >

<hibernate-mapping auto-import="false" package="ccp.api.molecule.ChemComp">
  <class
    name="AbstractChemAtom"
    table="CHEM_ABSTRACTCHEMATOM"
    schema="nmr" 
  >
  <meta attribute="extends" inherit="false">memops.general.AbstractModelObject</meta>
  <meta attribute="implements">java.lang.Comparable</meta>
  <meta attribute="class-description">Atom in topology sense. E.g. Arg CB.  The AbstractChemAtoms within a ChemComp comprise all atomds (including link atoms) contained in any form of the ChemComp. The ChemCompVars then select the appropriate subset of AbstractChemAtoms. Bonds, angles, Stereochemistry etc. are relevant only for the ChemCompVars that contain all AbstractChemAtoms involved.  ChemAtom names are (should be) IUPAC and follow from the nature of the ChemComp. LinkAtom names (should) reflect the linkCode of the LinkEnd they are part of; the recommended style is that a LinkEnd with a linkCode 'prev' should have link atoms named 'prev_1' for the LinkAtom partaking in the bond and 'prev_2' for the other LinkAtom.</meta>
  <cache usage="read-write"/>

  <id
    name="_dbId"
    access="field"
    column="DATAOBJECTID"
    type="java.lang.Long">
    <meta attribute="scope-set">protected</meta>
    <generator class="native"/>
  </id>
  
  <many-to-one
    name="_topObject"
    access="field"
    column="TOPOBJECTID"
    class="ccp.api.molecule.ChemComp.ChemComp"
    not-null="true"
    unique="false"
    foreign-key="CHEM_ABSTCHEMATOM_CHEMCOMP_TO_FK"
  >
    <meta attribute="field-description">hard coded link to topObject</meta>
  </many-to-one>
  
  <property
    name="_name"
    access="field"
    type="java.lang.String" length="32"
    not-null="true"
  >
    <meta attribute="field-description">name of ChemAtom</meta>
    <meta attribute="default-value">null</meta>
    <column name="NAME" sql-type="VARCHAR(32)" length="32" not-null="true" unique-key="abstractChemAtomUniqueKey" />
  </property>
  
  <property
    name="_subType"
    access="field"
    type="java.lang.Integer"
    not-null="true"
  >
    <meta attribute="field-description">Subtype of AbstractChemAtom, used to distinguish Atoms with the same names but different characteristics, to be used in diferent ChemCompVars.</meta>
    <meta attribute="default-value">new java.lang.Integer(1)</meta>
    <column name="SUBTYPE" sql-type="INTEGER" not-null="true" unique-key="abstractChemAtomUniqueKey" />
  </property>
  
  <list
    name="hbApplicationData"
    table="CHEM_ABSTCHEMATOM2APPLDATA"
      schema="nmr" 
    access="property"
    cascade="all"
  >
    <meta attribute="field-description">Application-specific data</meta>
    <key column="DATAOBJECTID"/>
    <list-index column="ORDER_applicationData_" base="1"/>
    <many-to-many
      column="APPLICATIONDATAID"
      class="memops.api.Implementation.ApplicationData"
      foreign-key="IMPL_DATAOBJECT_APPLDATA_FK"
      unique="true">
    </many-to-many>
  </list>
  
  <many-to-one
    name="hbAccess"
    column="ACCESSID"
    class="memops.api.AccessControl.AccessObject" 
    not-null="false"
    unique="true"
    foreign-key="IMPL_DATAOBJECT_ACCESS_FK" 
  >
    <meta attribute="field-description">Access object that controls object access</meta>
  </many-to-one>
  
  <many-to-one
    name="hbChemComp"
    column="CHEMCOMPID"
    class="ccp.api.molecule.ChemComp.ChemComp" 
    cascade="merge,save-update"
    not-null="true"
    unique="false"
    foreign-key="CHEM_ABSTCHEMATOM_CHEMCOMP_FK" 
    unique-key="abstractChemAtomUniqueKey" 
  >
    <meta attribute="field-description">N/A</meta>
  </many-to-one>
  
  <set 
    name="hbChemAngles" 
    table="CHEM_CHEMANGLE2CHEMATOMS"
      schema="nmr" 
    inverse="true" 
    cascade="none"
  >
    <meta attribute="field-description">ChemAngles involving AbstractChemAtom</meta>
    <meta attribute="base-name">hbChemAngle</meta>
    <cache usage="read-write"/>
    <key column="CHEMATOMID" foreign-key="CHEM_CHEMANGLE_CHEMATOMS_FK"/>
    <many-to-many column="CHEMANGLEID" class="ccp.api.molecule.ChemComp.ChemAngle" foreign-key="CHEM_ABSTCHEMATOM_CHEMANGLES_FK"/>
  </set>
  
  <set 
    name="hbChemBonds" 
    table="CHEM_CHEMBOND2CHEMATOMS"
      schema="nmr" 
    inverse="true" 
    cascade="none"
  >
    <meta attribute="field-description">ChemBonds involving AbstractChemAtom</meta>
    <meta attribute="base-name">hbChemBond</meta>
    <cache usage="read-write"/>
    <key column="CHEMATOMID" foreign-key="CHEM_CHEMBOND_CHEMATOMS_FK"/>
    <many-to-many column="CHEMBONDID" class="ccp.api.molecule.ChemComp.ChemBond" foreign-key="CHEM_ABSTCHEMATOM_CHEMBONDS_FK"/>
  </set>
  
  <set 
    name="hbChemCompVars" 
    table="CHEM_CHEMCOMPVAR2CHEMATOMS"
      schema="nmr" 
    inverse="true" 
    cascade="none"
  >
    <meta attribute="field-description">ChemCompVars that contain AbstractChemAtom</meta>
    <meta attribute="base-name">hbChemCompVar</meta>
    <cache usage="read-write"/>
    <key column="CHEMATOMID" foreign-key="CHEM_CHEMCOMPVAR_CHEMATOMS_FK"/>
    <many-to-many column="CHEMCOMPVARID" class="ccp.api.molecule.ChemComp.ChemCompVar" foreign-key="CHEM_ABSTCHEMATOM_CHEMCOMPVARS_FK"/>
  </set>
  
  <set 
    name="hbChemTorsions" 
    table="CHEM_CHEMTORS2CHEMATOMS"
      schema="nmr" 
    inverse="true" 
    cascade="none"
  >
    <meta attribute="field-description">ChemTorsions involving AbstractChemAtom</meta>
    <meta attribute="base-name">hbChemTorsion</meta>
    <cache usage="read-write"/>
    <key column="CHEMATOMID" foreign-key="CHEM_CHEMTORS_CHEMATOMS_FK"/>
    <many-to-many column="CHEMTORSIONID" class="ccp.api.molecule.ChemComp.ChemTorsion" foreign-key="CHEM_ABSTCHEMATOM_CHEMTORS_FK"/>
  </set>
  
  <set 
    name="hbStereochemistries" 
    table="CHEM_STER2CHEMATOMS"
      schema="nmr" 
    inverse="true" 
    cascade="none"
  >
    <meta attribute="field-description">StereoChemistry objects that involve AbstractChemAtom</meta>
    <meta attribute="base-name">hbStereochemistry</meta>
    <cache usage="read-write"/>
    <key column="CHEMATOMID" foreign-key="CHEM_STER_CHEMATOMS_FK"/>
    <many-to-many column="STEREOCHEMISTRYID" class="ccp.api.molecule.ChemComp.Stereochemistry" foreign-key="CHEM_ABSTCHEMATOM_STER_FK"/>
  </set>

  </class>

</hibernate-mapping>
