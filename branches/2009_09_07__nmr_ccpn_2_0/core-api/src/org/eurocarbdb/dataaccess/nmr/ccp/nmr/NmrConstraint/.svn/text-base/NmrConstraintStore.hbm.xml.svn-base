<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
  "-//Hibernate/Hibernate Mapping DTD//EN"
  "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >

<hibernate-mapping auto-import="false" package="ccp.api.nmr.NmrConstraint">
  <class
    name="NmrConstraintStore"
    table="NMRC_NMRCONSTRAINTSTORE"
    schema="nmr" 
  >
  <meta attribute="extends" inherit="false">memops.general.AbstractModelObject</meta>
  <meta attribute="implements">java.lang.Comparable</meta>
  <meta attribute="class-description">Collection of Nmr constraints used together, and associated information. This class serves as TopObject. </meta>
  <cache usage="read-write"/>

  <id
    name="_dbId"
    access="field"
    column="TOPOBJECTID"
    type="java.lang.Long">
    <meta attribute="scope-set">protected</meta>
    <generator class="native"/>
  </id>
  
  <property
    name="_segment"
    access="field"
    type="java.lang.String" length="20"
    not-null="false"
  >
    <meta attribute="field-description"></meta>
    <column name="SEGMENT" sql-type="VARCHAR(20)" length="20" not-null="false"  unique-key="nmrConstraintStoreUniqueKey" />
  </property>
  
  <property
    name="_guid"
    access="field"
    type="java.lang.String" length="80"
    not-null="true"
  >
    <meta attribute="field-description">global unique identifier - set by implementation.</meta>
    <meta attribute="default-value">null</meta>
    <column name="GUID" sql-type="VARCHAR(80)" length="80" not-null="true"/>
  </property>
  
  <property
    name="_serial"
    access="field"
    type="java.lang.Integer"
    not-null="true"
  >
    <meta attribute="field-description">Serial number of object. Serves as object main key. Serial numbers of deleted objects are not re-used. Serial numbers can only be set by the implementation. Values are in practice always positive, since negative values are interpreted as a signal to set the next free serial</meta>
    <meta attribute="default-value">null</meta>
    <column name="SERIAL" sql-type="INTEGER" not-null="true" unique-key="nmrConstraintStoreUniqueKey" />
  </property>
  
  <list
    name="hbApplicationData"
    table="NMRC_NMRCONSSTOR2APPLDATA"
      schema="nmr" 
    access="property"
    cascade="all"
  >
    <meta attribute="field-description">Application-specific data</meta>
    <key column="DATAOBJECTID"/>
    <list-index column="ORDER_applicationData_" base="1"/>
    <many-to-many
      column="APPLICATIONDATAID"
      class="memops.api.Implementation.ApplicationData"
      foreign-key="IMPL_DATAOBJECT_APPLDATA_FK"
      unique="true">
    </many-to-many>
  </list>
  
  <many-to-one
    name="hbAccess"
    column="ACCESSID"
    class="memops.api.AccessControl.AccessObject" 
    not-null="false"
    unique="true"
    foreign-key="IMPL_DATAOBJECT_ACCESS_FK" 
  >
    <meta attribute="field-description">Access object that controls object access</meta>
  </many-to-one>
  
  <many-to-one
    name="hbNmrProject"
    column="NMRPROJECTID"
    class="ccp.api.nmr.Nmr.NmrProject" 
    cascade="merge,save-update"
    not-null="true"
    unique="false"
    foreign-key="NMRC_NMRCONSSTOR_NMRPROJECT_FK" 
  >
    <meta attribute="field-description">NmrProject to which the NmrConstraintStore refers</meta>
  </many-to-one>
  
  <set 
    name="hbConditionStates" 
    table="NMRC_CONDITIONSTATE"
      schema="nmr" 
    inverse="true" 
    cascade="all"
  >
    <meta attribute="field-description">N/A</meta>
    <meta attribute="base-name">hbConditionState</meta>
    <cache usage="read-write"/>
    <key column="NMRCONSTRAINTSTOREID"/>
    <one-to-many class="ccp.api.nmr.NmrConstraint.ConditionState"/>
  </set>
  
  <set 
    name="hbConstraintGroups" 
    table="NMRC_CONSTRAINTGROUP"
      schema="nmr" 
    inverse="true" 
    cascade="all"
  >
    <meta attribute="field-description">N/A</meta>
    <meta attribute="base-name">hbConstraintGroup</meta>
    <cache usage="read-write"/>
    <key column="NMRCONSTRAINTSTOREID"/>
    <one-to-many class="ccp.api.nmr.NmrConstraint.ConstraintGroup"/>
  </set>
  
  <set 
    name="hbConstraintLists" 
    table="NMRC_ABSTRACTCONSTRAINTLIST"
      schema="nmr" 
    inverse="true" 
    cascade="all"
  >
    <meta attribute="field-description">N/A</meta>
    <meta attribute="base-name">hbConstraintList</meta>
    <cache usage="read-write"/>
    <key column="NMRCONSTRAINTSTOREID"/>
    <one-to-many class="ccp.api.nmr.NmrConstraint.AbstractConstraintList"/>
  </set>
  
  <set 
    name="hbFixedAtomSets" 
    table="NMRC_FIXEDATOMSET"
      schema="nmr" 
    inverse="true" 
    cascade="all"
  >
    <meta attribute="field-description">N/A</meta>
    <meta attribute="base-name">hbFixedAtomSet</meta>
    <cache usage="read-write"/>
    <key column="NMRCONSTRAINTSTOREID"/>
    <one-to-many class="ccp.api.nmr.NmrConstraint.FixedAtomSet"/>
  </set>
  
  <set 
    name="hbFixedResonanceSets" 
    table="NMRC_FIXEDRESONANCESET"
      schema="nmr" 
    inverse="true" 
    cascade="all"
  >
    <meta attribute="field-description">N/A</meta>
    <meta attribute="base-name">hbFixedResonanceSet</meta>
    <cache usage="read-write"/>
    <key column="NMRCONSTRAINTSTOREID"/>
    <one-to-many class="ccp.api.nmr.NmrConstraint.FixedResonanceSet"/>
  </set>
  
  <set 
    name="hbFixedResonances" 
    table="NMRC_FIXEDRESONANCE"
      schema="nmr" 
    inverse="true" 
    cascade="all"
  >
    <meta attribute="field-description">N/A</meta>
    <meta attribute="base-name">hbFixedResonance</meta>
    <cache usage="read-write"/>
    <key column="NMRCONSTRAINTSTOREID"/>
    <one-to-many class="ccp.api.nmr.NmrConstraint.FixedResonance"/>
  </set>
  
  <set 
    name="hbResStructures" 
    table="NMRC_RESSTRUCTURE"
      schema="nmr" 
    inverse="true" 
    cascade="all"
  >
    <meta attribute="field-description">ResStructures generated in StructureGeneration run.</meta>
    <meta attribute="base-name">hbResStructure</meta>
    <cache usage="read-write"/>
    <key column="NMRCONSTRAINTSTOREID"/>
    <one-to-many class="ccp.api.nmr.NmrConstraint.ResStructure"/>
  </set>
  
  <set 
    name="hbStructureAnalyses" 
    table="NMR_STRUCTUREANALYSIS"
      schema="nmr" 
    inverse="true" 
    cascade="none"
  >
    <meta attribute="field-description">StructureAnalyses that user NmrConstraintStore as proimary set of restraints</meta>
    <meta attribute="base-name">hbStructureAnalysis</meta>
    <cache usage="read-write"/>
    <key column="NMRCONSTRAINTSTOREID"/>
    <one-to-many class="ccp.api.nmr.Nmr.StructureAnalysis"/>
  </set>
  
  <set 
    name="hbStructureGenerations" 
    table="NMR_STRUCTUREGENERATION"
      schema="nmr" 
    inverse="true" 
    cascade="none"
  >
    <meta attribute="field-description">StructureGenerations run with constraints held by NmrConstraintStore</meta>
    <meta attribute="base-name">hbStructureGeneration</meta>
    <cache usage="read-write"/>
    <key column="NMRCONSTRAINTSTOREID"/>
    <one-to-many class="ccp.api.nmr.Nmr.StructureGeneration"/>
  </set>
  
  <set 
    name="hbValidationStores" 
    table="VALD_VALIDATIONSTORE"
      schema="nmr" 
    inverse="true" 
    cascade="none"
  >
    <meta attribute="field-description">NmrConstraintStores relevant to NmrProject</meta>
    <meta attribute="base-name">hbValidationStore</meta>
    <cache usage="read-write"/>
    <key column="NMRCONSTRAINTSTOREID"/>
    <one-to-many class="ccp.api.molecule.Validation.ValidationStore"/>
  </set>
  
  <set 
    name="hbViolationLists" 
    table="NMRC_VIOLATIONLIST"
      schema="nmr" 
    inverse="true" 
    cascade="all"
  >
    <meta attribute="field-description">N/A</meta>
    <meta attribute="base-name">hbViolationList</meta>
    <cache usage="read-write"/>
    <key column="NMRCONSTRAINTSTOREID"/>
    <one-to-many class="ccp.api.nmr.NmrConstraint.ViolationList"/>
  </set>
  
  <set 
    name="hbAdditionalStructureAnalyses" 
    table="NMRC_NMRCONSSTOR2ADDISTRUANAL"
      schema="nmr" 
    inverse="false" 
    cascade="none"
  >
    <meta attribute="field-description">STructureAnaylsis that use the NmrConstraintStore for additional data</meta>
    <meta attribute="base-name">hbAdditionalStructureAnalysis</meta>
    <cache usage="read-write"/>
    <key column="ADDITIONALCONSTRAINTSTOREID" foreign-key="NMR_STRUANAL_ADDICONSSTOR_FK"/>
    <many-to-many column="ADDITIONALSTRUCTUREANALYSISID" class="ccp.api.nmr.Nmr.StructureAnalysis" foreign-key="NMRC_NMRCONSSTOR_ADDISTRUANAL_FK"/>
  </set>
  
  <set 
    name="hbChainStates" 
    table="NMRC_NMRCONSSTOR2CHAISTAT"
      schema="nmr" 
    inverse="false" 
    cascade="none"
  >
    <meta attribute="field-description">The ChainState of a NmrConstraintStore describes assumptions made during the generation process. For example, if you have two different conformational states of a molecule giving rise to two different sets of restraints, you would select the restraint set corresponding to state A and put in the appropriate link here to reflect it. Note that this link does *not* reflect the conformations actually observed. This link is not for annotating structures.</meta>
    <meta attribute="base-name">hbChainState</meta>
    <cache usage="read-write"/>
    <key column="NMRCONSTRAINTSTOREID" foreign-key="NMR_CHAINSTATE_NMRCONSSTOR_FK"/>
    <many-to-many column="CHAINSTATEID" class="ccp.api.nmr.Nmr.ChainState" foreign-key="NMRC_NMRCONSSTOR_CHAISTAT_FK"/>
  </set>

  </class>

</hibernate-mapping>
