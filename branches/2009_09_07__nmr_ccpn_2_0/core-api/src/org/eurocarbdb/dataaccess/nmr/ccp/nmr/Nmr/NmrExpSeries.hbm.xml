<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
  "-//Hibernate/Hibernate Mapping DTD//EN"
  "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >

<hibernate-mapping auto-import="false" package="ccp.api.nmr.Nmr">
  <class
    name="NmrExpSeries"
    table="NMR_NMREXPSERIES"
    schema="nmr" 
  >
  <meta attribute="extends" inherit="false">memops.general.AbstractModelObject</meta>
  <meta attribute="implements">java.lang.Comparable</meta>
  <meta attribute="class-description">Series of Nmr experiments varying some variable. E.g. titration series, temperature series, T1 measurement.</meta>
  <cache usage="read-write"/>

  <id
    name="_dbId"
    access="field"
    column="DATAOBJECTID"
    type="java.lang.Long">
    <meta attribute="scope-set">protected</meta>
    <generator class="native"/>
  </id>
  
  <many-to-one
    name="_topObject"
    access="field"
    column="TOPOBJECTID"
    class="ccp.api.nmr.Nmr.NmrProject"
    not-null="true"
    unique="false"
    foreign-key="NMR_NMREXPSERI_NMRPROJECT_TO_FK"
  >
    <meta attribute="field-description">hard coded link to topObject</meta>
  </many-to-one>
  
  <property
    name="_details"
    access="field"
    type="java.lang.String" length="254"
    not-null="false"
  >
    <meta attribute="field-description">Extra information about the variable being varied between experiments. if variableName is 'concentration', variableDescriptor gives the name of the species whose concentration is being monitored. If variableDescriptor matches a SampleComponent.AbstractComponent.name it can be assumed that this is the sampleComponent is being referred to.  Another example would be a hydrogen exchange series, where you would use variableName = 'time', variableDescriptor 'hydrogen exchange', or a T1 experiment, where you would use variableName='time', variableDescriptor 'T1 relaxation'</meta>
    <meta attribute="default-value">null</meta>
    <column name="DETAILS" sql-type="VARCHAR(254)" length="254" not-null="false"/>
  </property>
  
  <property
    name="_name"
    access="field"
    type="java.lang.String" length="80"
    not-null="false"
  >
    <meta attribute="field-description">name of NmrExpSeries - serves as a human readable identifier</meta>
    <meta attribute="default-value">null</meta>
    <column name="NAME" sql-type="VARCHAR(80)" length="80" not-null="false"/>
  </property>
  
  <property
    name="_serial"
    access="field"
    type="java.lang.Integer"
    not-null="true"
  >
    <meta attribute="field-description">Serial number of object. Serves as object main key. Serial numbers of deleted objects are not re-used. Serial numbers can only be set by the implementation. Values are in practice always positive, since negative values are interpreted as a signal to set the next free serial</meta>
    <meta attribute="default-value">null</meta>
    <column name="SERIAL" sql-type="INTEGER" not-null="true" unique-key="nmrExpSeriesUniqueKey" />
  </property>
  
  <list
    name="hbConditionNames"
    table="NMR_NMREXPSERI_CONDNAME"
      schema="nmr" 
    cascade="all"
  >
    <meta attribute="field-description">The variables that are changing from experiment to experiment in the NmrExpSeries. The variableNames must match a SampleCondition.condition.</meta>
    <cache usage="read-write" />
    <key column="NMREXPSERIESID" foreign-key="NMR_NMREXPSERI_CONDNAME_FK"/>
    <index>
      <column name="order_" sql-type="int8" not-null="true"/>
    </index>
    <element type="java.lang.String" not-null="true">
      <column name="CONDITIONNAME" sql-type="VARCHAR(80)" not-null="true"/>
    </element>
  </list>
  
  <list
    name="hbApplicationData"
    table="NMR_NMREXPSERI2APPLDATA"
      schema="nmr" 
    access="property"
    cascade="all"
  >
    <meta attribute="field-description">Application-specific data</meta>
    <key column="DATAOBJECTID"/>
    <list-index column="ORDER_applicationData_" base="1"/>
    <many-to-many
      column="APPLICATIONDATAID"
      class="memops.api.Implementation.ApplicationData"
      foreign-key="IMPL_DATAOBJECT_APPLDATA_FK"
      unique="true">
    </many-to-many>
  </list>
  
  <many-to-one
    name="hbAccess"
    column="ACCESSID"
    class="memops.api.AccessControl.AccessObject" 
    not-null="false"
    unique="true"
    foreign-key="IMPL_DATAOBJECT_ACCESS_FK" 
  >
    <meta attribute="field-description">Access object that controls object access</meta>
  </many-to-one>
  
  <many-to-one
    name="hbNmrProject"
    column="NMRPROJECTID"
    class="ccp.api.nmr.Nmr.NmrProject" 
    cascade="merge,save-update"
    not-null="true"
    unique="false"
    foreign-key="NMR_NMREXPSERI_NMRPROJECT_FK" 
    unique-key="nmrExpSeriesUniqueKey" 
  >
    <meta attribute="field-description">N/A</meta>
  </many-to-one>
  
  <list
    name="hbExperiments" 
    table="NMR_NMREXPSERI2EXPE"
      schema="nmr" 
    inverse="false" 
    cascade="none"
  >
    <meta attribute="field-description">Experiments that make up experiment series</meta>
    <meta attribute="base-name">hbExperiment</meta>
    <cache usage="read-write"/>
    <key column="NMREXPSERIESID" foreign-key="NMR_EXPERIMENT_NMREXPSERI_FK" not-null="true"/>
    <list-index column="order_experiments_" base="1"/>
    <many-to-many column="EXPERIMENTID" class="ccp.api.nmr.Nmr.Experiment" foreign-key="NMR_NMREXPSERI_EXPE_FK"/>
  </list>

  </class>

</hibernate-mapping>
