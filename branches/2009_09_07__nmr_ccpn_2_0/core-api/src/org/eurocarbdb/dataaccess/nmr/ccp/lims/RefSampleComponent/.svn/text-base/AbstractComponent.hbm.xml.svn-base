<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
  "-//Hibernate/Hibernate Mapping DTD//EN"
  "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >

<hibernate-mapping auto-import="false" package="ccp.api.lims.RefSampleComponent">
  <class
    name="AbstractComponent"
    table="REFS_ABSTRACTCOMPONENT"
    schema="nmr" 
  >
  <meta attribute="extends" inherit="false">memops.general.AbstractModelObject</meta>
  <meta attribute="implements">java.lang.Comparable</meta>
  <meta attribute="class-description">The abstract component is used to define the details which characterise all components, these are name, any synonyms and a CAS number. There are 4 subclasses of abstract component: Molecular component (MolComponent), Cell, Substance and Composite.</meta>
  <cache usage="read-write"/>

  <id
    name="_dbId"
    access="field"
    column="DATAOBJECTID"
    type="java.lang.Long">
    <meta attribute="scope-set">protected</meta>
    <generator class="native"/>
  </id>
  
  <many-to-one
    name="_topObject"
    access="field"
    column="TOPOBJECTID"
    class="ccp.api.lims.RefSampleComponent.RefSampleComponentStore"
    not-null="true"
    unique="false"
    foreign-key="REFS_ABSTCOMP_REFSAMPCOMPSTOR_TO_FK"
  >
    <meta attribute="field-description">hard coded link to topObject</meta>
  </many-to-one>
  
  <property
    name="_details"
    access="field"
    type="java.lang.String"
    not-null="false"
  >
    <meta attribute="field-description">Detail field for comments.</meta>
    <meta attribute="default-value">null</meta>
    <column name="DETAILS" sql-type="TEXT" not-null="false"/>
  </property>
  
  <property
    name="_name"
    access="field"
    type="java.lang.String" length="80"
    not-null="true"
  >
    <meta attribute="field-description">The name of the component. Unique identifier.</meta>
    <meta attribute="default-value">null</meta>
    <column name="NAME" sql-type="VARCHAR(80)" length="80" not-null="true" unique-key="abstractComponentUniqueKey" />
  </property>
  
  <list
    name="hbSynonyms"
    table="REFS_ABSTCOMP_SYNONYMS"
      schema="nmr" 
    cascade="all"
  >
    <meta attribute="field-description">The synonyms of the component.</meta>
    <cache usage="read-write" />
    <key column="ABSTRACTCOMPONENTID" foreign-key="REFS_ABSTCOMP_SYNONYMS_FK"/>
    <index>
      <column name="order_" sql-type="int8" not-null="true"/>
    </index>
    <element type="java.lang.String" not-null="true">
      <column name="SYNONYM" sql-type="VARCHAR(80)" not-null="true"/>
    </element>
  </list>
  
  <list
    name="hbApplicationData"
    table="REFS_ABSTCOMP2APPLDATA"
      schema="nmr" 
    access="property"
    cascade="all"
  >
    <meta attribute="field-description">Application-specific data</meta>
    <key column="DATAOBJECTID"/>
    <list-index column="ORDER_applicationData_" base="1"/>
    <many-to-many
      column="APPLICATIONDATAID"
      class="memops.api.Implementation.ApplicationData"
      foreign-key="IMPL_DATAOBJECT_APPLDATA_FK"
      unique="true">
    </many-to-many>
  </list>
  
  <many-to-one
    name="hbAccess"
    column="ACCESSID"
    class="memops.api.AccessControl.AccessObject" 
    not-null="false"
    unique="true"
    foreign-key="IMPL_DATAOBJECT_ACCESS_FK" 
  >
    <meta attribute="field-description">Access object that controls object access</meta>
  </many-to-one>
  
  <many-to-one
    name="hbNaturalSource"
    column="NATURALSOURCEID"
    class="ccp.api.general.Taxonomy.NaturalSource" 
    cascade="merge,save-update"
    not-null="false"
    unique="false"
    foreign-key="REFS_ABSTCOMP_NATUSOUR_FK" 
  >
    <meta attribute="field-description">The natural source of the component.</meta>
  </many-to-one>
  
  <many-to-one
    name="hbRefSampleComponentStore"
    column="REFSAMPLECOMPONENTSTOREID"
    class="ccp.api.lims.RefSampleComponent.RefSampleComponentStore" 
    cascade="merge,save-update"
    not-null="true"
    unique="false"
    foreign-key="REFS_ABSTCOMP_REFSAMPCOMPSTOR_FK" 
    unique-key="abstractComponentUniqueKey" 
  >
    <meta attribute="field-description">N/A</meta>
  </many-to-one>
  
  <set 
    name="hbComponentDbRefs" 
    table="REFS_COMPONENTDBREF"
      schema="nmr" 
    inverse="true" 
    cascade="all"
  >
    <meta attribute="field-description">N/A</meta>
    <meta attribute="base-name">hbComponentDbRef</meta>
    <cache usage="read-write"/>
    <key column="COMPONENTID"/>
    <one-to-many class="ccp.api.lims.RefSampleComponent.ComponentDbRef"/>
  </set>
  
  <set 
    name="hbCompositeElements" 
    table="REFS_COMPOSITEELEMENT"
      schema="nmr" 
    inverse="true" 
    cascade="none"
  >
    <meta attribute="field-description">List of element where the component is part of a composite.</meta>
    <meta attribute="base-name">hbCompositeElement</meta>
    <cache usage="read-write"/>
    <key column="COMPONENTID"/>
    <one-to-many class="ccp.api.lims.RefSampleComponent.CompositeElement"/>
  </set>
  
  <set 
    name="hbLabels" 
    table="REFS_LABEL"
      schema="nmr" 
    inverse="true" 
    cascade="all"
  >
    <meta attribute="field-description">N/A</meta>
    <meta attribute="base-name">hbLabel</meta>
    <cache usage="read-write"/>
    <key column="COMPONENTID"/>
    <one-to-many class="ccp.api.lims.RefSampleComponent.Label"/>
  </set>
  
  <set 
    name="hbCategories" 
    table="REFS_ABSTCOMP2CATEGORIES"
      schema="nmr" 
    inverse="false" 
    cascade="none"
  >
    <meta attribute="field-description">List of category associated to a component.</meta>
    <meta attribute="base-name">hbCategory</meta>
    <cache usage="read-write"/>
    <key column="COMPONENTID" foreign-key="CLAS_SAMPCOMPCATE_COMPONENTS_FK"/>
    <many-to-many column="CATEGORYID" class="ccp.api.lims.Classification.SampleComponentCategory" foreign-key="REFS_ABSTCOMP_CATEGORIES_FK"/>
  </set>

  </class>

</hibernate-mapping>
