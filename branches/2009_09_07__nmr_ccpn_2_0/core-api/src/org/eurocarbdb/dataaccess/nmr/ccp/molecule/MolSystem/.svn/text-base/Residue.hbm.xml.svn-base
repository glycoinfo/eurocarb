<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
  "-//Hibernate/Hibernate Mapping DTD//EN"
  "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >

<hibernate-mapping auto-import="false" package="ccp.api.molecule.MolSystem">
  <class
    name="Residue"
    table="MOLS_RESIDUE"
    schema="nmr" 
  >
  <meta attribute="extends" inherit="false">memops.general.AbstractModelObject</meta>
  <meta attribute="implements">java.lang.Comparable</meta>
  <meta attribute="class-description">A monomer part of a specific molecule in a specific environment (Chain)). </meta>
  <cache usage="read-write"/>

  <id
    name="_dbId"
    access="field"
    column="DATAOBJECTID"
    type="java.lang.Long">
    <meta attribute="scope-set">protected</meta>
    <generator class="native"/>
  </id>
  
  <many-to-one
    name="_topObject"
    access="field"
    column="TOPOBJECTID"
    class="ccp.api.molecule.MolSystem.MolSystem"
    not-null="true"
    unique="false"
    foreign-key="MOLS_RESIDUE_MOLSYSTEM_TO_FK"
  >
    <meta attribute="field-description">hard coded link to topObject</meta>
  </many-to-one>
  
  <property
    name="_descriptor"
    access="field"
    type="java.lang.String" length="80"
    not-null="true"
  >
    <meta attribute="field-description">descriptor of ChemCompVar corresponding to Residue. Describes topological variant, i.e. protonation state or (for Polymers) non-polymer type substitution.   linking and descriptor may be changed for existing Residues, thus changing the identity of the corresponding ChemCompVar.  The new chemCompVar must contain a ChemAtom to correspond to every existing Atom, and a LinkEnd to correspond to every existing MolSystemLinkEnd, as well as every existing MolResLinkEnd in the MolResidue. Note that this may require that Atom and MolSsytemLinkEnd objects be deleted before the linking and descriptor can be modified. </meta>
    <meta attribute="default-value">null</meta>
    <column name="DESCRIPTOR" sql-type="VARCHAR(80)" length="80" not-null="true"/>
  </property>
  
  <property
    name="_details"
    access="field"
    type="java.lang.String" length="254"
    not-null="false"
  >
    <meta attribute="field-description">free text for notes, etc.</meta>
    <meta attribute="default-value">null</meta>
    <column name="DETAILS" sql-type="VARCHAR(254)" length="254" not-null="false"/>
  </property>
  
  <property
    name="_linking"
    access="field"
    type="java.lang.String" length="32"
    not-null="true"
  >
    <meta attribute="field-description">linking (substitution pattern) of ChemCompVar corresponding to Residue. linking and descriptor may be changed for existing Residues, thus changing the identity of the corresponding ChemCompVar.  The new chemCompVar must contain a ChemAtom to correspond to every existing Atom, and a LinkEnd to correspond to every existing MolSystemLinkEnd, as well as every existing MolResLinkEnd in the MolResidue. Note that this may require that Atom and MolSsytemLinkEnd objects be deleted before the linking and descriptor can be modified. </meta>
    <meta attribute="default-value">null</meta>
    <column name="LINKING" sql-type="VARCHAR(32)" length="32" not-null="true"/>
  </property>
  
  <property
    name="_seqCode"
    access="field"
    type="java.lang.Integer"
    not-null="true"
  >
    <meta attribute="field-description">Author sequence identifier. Defaults to the MolResidue.seqCode</meta>
    <meta attribute="default-value">null</meta>
    <column name="SEQCODE" sql-type="INTEGER" not-null="true"/>
  </property>
  
  <property
    name="_seqId"
    access="field"
    type="java.lang.Integer"
    not-null="true"
  >
    <meta attribute="field-description">Identifier corresponding to the molResidue identifier (self.molResidue.serial)</meta>
    <meta attribute="default-value">null</meta>
    <column name="SEQID" sql-type="INTEGER" not-null="true" unique-key="residueUniqueKey" />
  </property>
  
  <property
    name="_seqInsertCode"
    access="field"
    type="java.lang.String" length="80"
    not-null="true"
  >
    <meta attribute="field-description">Author insertion code. Defaults to MolResidue.seqInsertCode (which again defaults to a single white space ' ').</meta>
    <meta attribute="default-value">" "</meta>
    <column name="SEQINSERTCODE" sql-type="VARCHAR(80)" length="80" not-null="true"/>
  </property>
  
  <list
    name="hbApplicationData"
    table="MOLS_RESIDUE2APPLDATA"
      schema="nmr" 
    access="property"
    cascade="all"
  >
    <meta attribute="field-description">Application-specific data</meta>
    <key column="DATAOBJECTID"/>
    <list-index column="ORDER_applicationData_" base="1"/>
    <many-to-many
      column="APPLICATIONDATAID"
      class="memops.api.Implementation.ApplicationData"
      foreign-key="IMPL_DATAOBJECT_APPLDATA_FK"
      unique="true">
    </many-to-many>
  </list>
  
  <many-to-one
    name="hbAccess"
    column="ACCESSID"
    class="memops.api.AccessControl.AccessObject" 
    not-null="false"
    unique="true"
    foreign-key="IMPL_DATAOBJECT_ACCESS_FK" 
  >
    <meta attribute="field-description">Access object that controls object access</meta>
  </many-to-one>
  
  <many-to-one
    name="hbChain"
    column="CHAINID"
    class="ccp.api.molecule.MolSystem.Chain" 
    cascade="merge,save-update"
    not-null="true"
    unique="false"
    foreign-key="MOLS_RESIDUE_CHAIN_FK" 
    unique-key="residueUniqueKey" 
  >
    <meta attribute="field-description">parent link</meta>
  </many-to-one>
  
  <many-to-one
    name="hbChainFragment"
    column="CHAINFRAGMENTID"
    class="ccp.api.molecule.MolSystem.ChainFragment" 
    cascade="merge,save-update"
    not-null="false"
    unique="false"
    foreign-key="MOLS_RESIDUE_CHAIFRAG_FK" 
  >
    <meta attribute="field-description">ChainFragment to which Residue belongs. When Chains are created, each Residue will automatically be linked to a ChainFragment, so that the Chain is divided in Fragments of uniform molType.</meta>
  </many-to-one>
  
  <set 
    name="hbAtoms" 
    table="MOLS_ATOM"
      schema="nmr" 
    inverse="true" 
    cascade="all"
  >
    <meta attribute="field-description">child link</meta>
    <meta attribute="base-name">hbAtom</meta>
    <cache usage="read-write"/>
    <key column="RESIDUEID"/>
    <one-to-many class="ccp.api.molecule.MolSystem.Atom"/>
  </set>
  
  <set 
    name="hbMolSystemLinkEnds" 
    table="MOLS_MOLSYSTEMLINKEND"
      schema="nmr" 
    inverse="true" 
    cascade="all"
  >
    <meta attribute="field-description">N/A</meta>
    <meta attribute="base-name">hbMolSystemLinkEnd</meta>
    <cache usage="read-write"/>
    <key column="RESIDUEID"/>
    <one-to-many class="ccp.api.molecule.MolSystem.MolSystemLinkEnd"/>
  </set>
  
  <set 
    name="hbResidueProbs" 
    table="NMR_RESIDUEPROB"
      schema="nmr" 
    inverse="true" 
    cascade="none"
  >
    <meta attribute="field-description">ResidueProb describing ResonanceGroups with a probability of corresponding to this residue.</meta>
    <meta attribute="base-name">hbResidueProb</meta>
    <cache usage="read-write"/>
    <key column="POSSIBILITYID"/>
    <one-to-many class="ccp.api.nmr.Nmr.ResidueProb"/>
  </set>
  
  <set 
    name="hbResonanceGroups" 
    table="NMR_RESONANCEGROUP"
      schema="nmr" 
    inverse="true" 
    cascade="none"
  >
    <meta attribute="field-description">ResonanceGroups that are definitely assigned to this residue</meta>
    <meta attribute="base-name">hbResonanceGroup</meta>
    <cache usage="read-write"/>
    <key column="RESIDUEID"/>
    <one-to-many class="ccp.api.nmr.Nmr.ResonanceGroup"/>
  </set>
  
  <set 
    name="hbMolSysResidueValidations" 
    table="VALD_MOLSYSRESIVALI2RESIDUES"
      schema="nmr" 
    inverse="true" 
    cascade="none"
  >
    <meta attribute="field-description">Validation results for Residue</meta>
    <meta attribute="base-name">hbMolSysResidueValidation</meta>
    <cache usage="read-write"/>
    <key column="RESIDUEID" foreign-key="VALD_MOLSYSRESIVALI_RESIDUES_FK"/>
    <many-to-many column="MOLSYSRESIDUEVALIDATIONID" class="ccp.api.molecule.Validation.MolSysResidueValidation" foreign-key="MOLS_RESIDUE_MOLSYSRESIVALI_FK"/>
  </set>
  
  <set 
    name="hbChainStateSets" 
    table="NMR_CHAISTATSET2RESIDUES"
      schema="nmr" 
    inverse="true" 
    cascade="none"
  >
    <meta attribute="field-description">ChainStateSets relevant for Residue</meta>
    <meta attribute="base-name">hbChainStateSet</meta>
    <cache usage="read-write"/>
    <key column="RESIDUEID" foreign-key="NMR_CHAISTATSET_RESIDUES_FK"/>
    <many-to-many column="CHAINSTATESETID" class="ccp.api.nmr.Nmr.ChainStateSet" foreign-key="MOLS_RESIDUE_CHAISTATSETS_FK"/>
  </set>
  
    <many-to-one
      name="MolResidue"
      access="noop"
      column="MOLRESIDUEID"
      class="ccp.api.molecule.Molecule.MolResidue" 
      cascade="none"
      not-null="false"
      unique="false"
      foreign-key="MOLS_RESIDUE_MOLE_MOLRESIDUE_FK" 
    >
      <meta attribute="field-description">Hand coded example of sticking derived links into the SQL</meta>
    </many-to-one>

  </class>

</hibernate-mapping>
