<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
  "-//Hibernate/Hibernate Mapping DTD//EN"
  "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >

<hibernate-mapping auto-import="false" package="ccp.api.nmr.Nmr">
  <class
    name="DimensionScaling"
    table="NMR_DIMENSIONSCALING"
    schema="nmr" 
  >
  <meta attribute="extends" inherit="false">memops.general.AbstractModelObject</meta>
  <meta attribute="implements">java.lang.Comparable</meta>
  <meta attribute="class-description">Scaling factors used for various ExpDimRefs in this particular DataSource. Note: If there is no DimensionScaling connecting a DataDim with an ExpDimRef (both belonging to the same ExpDim) this means that the ExpDimRef is not used. Note taht a DimensionScaling with scalingFactors == (1.0,) is created automatically when a FreqDataDim or FidDataDim is created and 1) for each relevant ExpDimRef that has a refExpDimRef, 2) if nothing is created under 1) but there is only one relevant ExpDimRef, 3) if no9thing is created above but there is ony one relevant ExpDimRef  with measurementType == 'Shift'</meta>
  <cache usage="read-write"/>

  <id
    name="_dbId"
    access="field"
    column="DATAOBJECTID"
    type="java.lang.Long">
    <meta attribute="scope-set">protected</meta>
    <generator class="native"/>
  </id>
  
  <many-to-one
    name="_topObject"
    access="field"
    column="TOPOBJECTID"
    class="ccp.api.nmr.Nmr.NmrProject"
    not-null="true"
    unique="false"
    foreign-key="NMR_DIMESCAL_NMRPROJECT_TO_FK"
  >
    <meta attribute="field-description">hard coded link to topObject</meta>
  </many-to-one>
  
  <list
    name="hbScalingFactors"
    table="NMR_DIMESCAL_SCALFACT"
      schema="nmr" 
    cascade="all"
  >
    <meta attribute="field-description">Scaling factors that may appear on relevant PeakDimComponents of peaks in the DataSource. The order of scaling factors is not significant, but the attribute is kept ordered to make it simpler to get hold of the data in the most common case where there is only one scalingFactor.</meta>
    <cache usage="read-write" />
    <key column="DIMENSIONSCALINGID" foreign-key="NMR_DIMESCAL_SCALFACT_FK"/>
    <index>
      <column name="order_" sql-type="int8" not-null="true"/>
    </index>
    <element type="java.lang.Float" not-null="true">
      <column name="SCALINGFACTOR" sql-type="FLOAT" not-null="true"/>
    </element>
  </list>
  
  <list
    name="hbApplicationData"
    table="NMR_DIMESCAL2APPLDATA"
      schema="nmr" 
    access="property"
    cascade="all"
  >
    <meta attribute="field-description">Application-specific data</meta>
    <key column="DATAOBJECTID"/>
    <list-index column="ORDER_applicationData_" base="1"/>
    <many-to-many
      column="APPLICATIONDATAID"
      class="memops.api.Implementation.ApplicationData"
      foreign-key="IMPL_DATAOBJECT_APPLDATA_FK"
      unique="true">
    </many-to-many>
  </list>
  
  <many-to-one
    name="hbAccess"
    column="ACCESSID"
    class="memops.api.AccessControl.AccessObject" 
    not-null="false"
    unique="true"
    foreign-key="IMPL_DATAOBJECT_ACCESS_FK" 
  >
    <meta attribute="field-description">Access object that controls object access</meta>
  </many-to-one>
  
  <many-to-one
    name="hbDataDim"
    column="DATADIMID"
    class="ccp.api.nmr.Nmr.AbstractDataDim" 
    cascade="merge,save-update"
    not-null="true"
    unique="false"
    foreign-key="NMR_DIMESCAL_DATADIM_FK" 
    unique-key="dimensionScalingUniqueKey" 
  >
    <meta attribute="field-description">N/A</meta>
  </many-to-one>
  
  <many-to-one
    name="hbExpDimRef"
    column="EXPDIMREFID"
    class="ccp.api.nmr.Nmr.ExpDimRef" 
    cascade="merge,save-update"
    not-null="true"
    unique="false"
    foreign-key="NMR_DIMESCAL_EXPDIMREF_FK" 
    unique-key="dimensionScalingUniqueKey" 
  >
    <meta attribute="field-description">ExpDimRef to which the scaling factor applies</meta>
  </many-to-one>

  </class>

</hibernate-mapping>
