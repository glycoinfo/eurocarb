<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
  "-//Hibernate/Hibernate Mapping DTD//EN"
  "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >

<hibernate-mapping auto-import="false" package="ccp.api.molecule.Molecule">
  <class
    name="MolResidue"
    table="MOLE_MOLRESIDUE"
    schema="nmr" 
  >
  <meta attribute="extends" inherit="false">memops.general.AbstractModelObject</meta>
  <meta attribute="implements">java.lang.Comparable</meta>
  <meta attribute="class-description">Monomer/Residue belonging to a Molecule, e.g. in the sequence for Insulin A-chain as such, as opposed to a specific Insulin A-chain molecule with coordinates.  Note that MolResidues can neither be created nor deleted while their parent Molecule is linked to one or more chains. When creating a Molecule all relevant MolResLinkEnds are created automatically. Note also that MolResidues can not be deleted, except as a consequence of deleting their molecule.  It is guaranteed that the serials of molResidues form a continuous range, and that all linear polymer type links are between MolResidues with consecutive serials. The Molesidue.serials must start at one. This constraint is not checked (for technical reasons), but it can only be broken if someone has modified the data bypassing the API.</meta>
  <cache usage="read-write"/>

  <id
    name="_dbId"
    access="field"
    column="DATAOBJECTID"
    type="java.lang.Long">
    <meta attribute="scope-set">protected</meta>
    <generator class="native"/>
  </id>
  
  <many-to-one
    name="_topObject"
    access="field"
    column="TOPOBJECTID"
    class="ccp.api.molecule.Molecule.Molecule"
    not-null="true"
    unique="false"
    foreign-key="MOLE_MOLRESIDUE_MOLECULE_TO_FK"
  >
    <meta attribute="field-description">hard coded link to topObject</meta>
  </many-to-one>
  
  <property
    name="_descriptor"
    access="field"
    type="java.lang.String" length="80"
    not-null="true"
  >
    <meta attribute="field-description">ChemComp descriptor - part of ChemCompVar key. Describes topological variant (e,g, protonation state) of ChemCompVar. For Polymer-type ChemComps (those that have 'next' or 'prev' LinkEnds) also describes non-polymer part of substitution pattern. </meta>
    <meta attribute="default-value">null</meta>
    <column name="DESCRIPTOR" sql-type="VARCHAR(80)" length="80" not-null="true"/>
  </property>
  
  <property
    name="_linking"
    access="field"
    type="java.lang.String" length="32"
    not-null="true"
  >
    <meta attribute="field-description">Residue linking code. For polymers distinguishes between terminal (start), terminal (end) and internal residues. For nonpolymers defines substitution pattern. Part of key for ChemCompVar. May be modified after sequence definition. </meta>
    <meta attribute="default-value">null</meta>
    <column name="LINKING" sql-type="VARCHAR(32)" length="32" not-null="true"/>
  </property>
  
  <property
    name="_seqCode"
    access="field"
    type="java.lang.Integer"
    not-null="true"
  >
    <meta attribute="field-description">The seqCode is the residue number given by the user. For linear polymers normally used to give the position of the residue in the molecule sequence.</meta>
    <meta attribute="default-value">null</meta>
    <column name="SEQCODE" sql-type="INTEGER" not-null="true"/>
  </property>
  
  <property
    name="_seqInsertCode"
    access="field"
    type="java.lang.String" length="80"
    not-null="true"
  >
    <meta attribute="field-description">Sequence insert code - entered by user. Serves to distinguish residues that the user prefers to give the same seqCode. Defaults to a single space.</meta>
    <meta attribute="default-value">" "</meta>
    <column name="SEQINSERTCODE" sql-type="VARCHAR(80)" length="80" not-null="true"/>
  </property>
  
  <property
    name="_serial"
    access="field"
    type="java.lang.Integer"
    not-null="true"
  >
    <meta attribute="field-description">Serial number of object. Serves as object main key. Serial numbers of deleted objects are not re-used. Serial numbers can only be set by the implementation. Values are in practice always positive, since negative values are interpreted as a signal to set the next free serial</meta>
    <meta attribute="default-value">null</meta>
    <column name="SERIAL" sql-type="INTEGER" not-null="true" unique-key="molResidueUniqueKey" />
  </property>
  
  <list
    name="hbApplicationData"
    table="MOLE_MOLRESIDUE2APPLDATA"
      schema="nmr" 
    access="property"
    cascade="all"
  >
    <meta attribute="field-description">Application-specific data</meta>
    <key column="DATAOBJECTID"/>
    <list-index column="ORDER_applicationData_" base="1"/>
    <many-to-many
      column="APPLICATIONDATAID"
      class="memops.api.Implementation.ApplicationData"
      foreign-key="IMPL_DATAOBJECT_APPLDATA_FK"
      unique="true">
    </many-to-many>
  </list>
  
  <many-to-one
    name="hbAccess"
    column="ACCESSID"
    class="memops.api.AccessControl.AccessObject" 
    not-null="false"
    unique="true"
    foreign-key="IMPL_DATAOBJECT_ACCESS_FK" 
  >
    <meta attribute="field-description">Access object that controls object access</meta>
  </many-to-one>
  
  <many-to-one
    name="hbChemComp"
    column="CHEMCOMPID"
    class="ccp.api.molecule.ChemComp.ChemComp" 
    cascade="merge,save-update"
    not-null="true"
    unique="false"
    foreign-key="MOLE_MOLRESIDUE_CHEMCOMP_FK" 
  >
    <meta attribute="field-description">ChemComp that describes the type of the MolResidue</meta>
  </many-to-one>
  
  <many-to-one
    name="hbMolSeqFragment"
    column="MOLSEQFRAGMENTID"
    class="ccp.api.molecule.Molecule.MolSeqFragment" 
    cascade="merge,save-update"
    not-null="false"
    unique="false"
    foreign-key="MOLE_MOLRESIDUE_MOLSEQFRAG_FK" 
  >
    <meta attribute="field-description">MolSeqFragment delimited by MolResidue</meta>
  </many-to-one>
  
  <many-to-one
    name="hbMolecule"
    column="MOLECULEID"
    class="ccp.api.molecule.Molecule.Molecule" 
    cascade="merge,save-update"
    not-null="true"
    unique="false"
    foreign-key="MOLE_MOLRESIDUE_MOLECULE_FK" 
    unique-key="molResidueUniqueKey" 
  >
    <meta attribute="field-description">N/A</meta>
  </many-to-one>
  
  <set 
    name="hbMolResLinkEnds" 
    table="MOLE_MOLRESLINKEND"
      schema="nmr" 
    inverse="true" 
    cascade="all"
  >
    <meta attribute="field-description">N/A</meta>
    <meta attribute="base-name">hbMolResLinkEnd</meta>
    <cache usage="read-write"/>
    <key column="MOLRESIDUEID"/>
    <one-to-many class="ccp.api.molecule.Molecule.MolResLinkEnd"/>
  </set>
  
  <set 
    name="hbIsotopeLabels" 
    table="MOLE_MOLRESIDUE2ISOTLABE"
      schema="nmr" 
    inverse="false" 
    cascade="none"
  >
    <meta attribute="field-description">Isotope label objects relevant to MolResidue</meta>
    <meta attribute="base-name">hbIsotopeLabel</meta>
    <cache usage="read-write"/>
    <key column="MOLRESIDUEID" foreign-key="REFS_ISOTLABE_MOLRESI_FK"/>
    <many-to-many column="ISOTOPELABELID" class="ccp.api.lims.RefSampleComponent.IsotopeLabel" foreign-key="MOLE_MOLRESIDUE_ISOTLABE_FK"/>
  </set>

  </class>

</hibernate-mapping>
