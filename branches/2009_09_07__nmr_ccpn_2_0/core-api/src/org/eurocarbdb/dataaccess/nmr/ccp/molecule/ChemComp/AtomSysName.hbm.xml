<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
  "-//Hibernate/Hibernate Mapping DTD//EN"
  "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >

<hibernate-mapping auto-import="false" package="ccp.api.molecule.ChemComp">
  <class
    name="AtomSysName"
    table="CHEM_ATOMSYSNAME"
    schema="nmr" 
  >
  <meta attribute="extends" inherit="false">memops.general.AbstractModelObject</meta>
  <meta attribute="implements">java.lang.Comparable</meta>
  <meta attribute="class-description">'sysName' is the systematic name for the ChemAtom or ChemAtomSet with name 'atomName' and subType atomSubType according to the naming system 'namingSystem'. 'atomName' and atomSubTypecan be used to identify the ChemAtom(Set) involved.</meta>
  <cache usage="read-write"/>

  <id
    name="_dbId"
    access="field"
    column="DATAOBJECTID"
    type="java.lang.Long">
    <meta attribute="scope-set">protected</meta>
    <generator class="native"/>
  </id>
  
  <many-to-one
    name="_topObject"
    access="field"
    column="TOPOBJECTID"
    class="ccp.api.molecule.ChemComp.ChemComp"
    not-null="true"
    unique="false"
    foreign-key="CHEM_ATOMSYSNAME_CHEMCOMP_TO_FK"
  >
    <meta attribute="field-description">hard coded link to topObject</meta>
  </many-to-one>
  
  <property
    name="_atomName"
    access="field"
    type="java.lang.String" length="32"
    not-null="true"
  >
    <meta attribute="field-description">name of ChemAtom or ChemAtomSet the systematic name applies to.</meta>
    <meta attribute="default-value">null</meta>
    <column name="ATOMNAME" sql-type="VARCHAR(32)" length="32" not-null="true" unique-key="atomSysNameUniqueKey" />
  </property>
  
  <property
    name="_atomSubType"
    access="field"
    type="java.lang.Integer"
    not-null="true"
  >
    <meta attribute="field-description">subType of ChemAtom or ChemAtomSet the systematic name applies to.</meta>
    <meta attribute="default-value">new java.lang.Integer(1)</meta>
    <column name="ATOMSUBTYPE" sql-type="INTEGER" not-null="true" unique-key="atomSysNameUniqueKey" />
  </property>
  
  <property
    name="_sysName"
    access="field"
    type="java.lang.String" length="80"
    not-null="true"
  >
    <meta attribute="field-description">Systematic name of ChemAtom (or ChemAtomSet)</meta>
    <meta attribute="default-value">null</meta>
    <column name="SYSNAME" sql-type="VARCHAR(80)" length="80" not-null="true"/>
  </property>
  
  <list
    name="hbAltSysNames"
    table="CHEM_ATOMSYSNAME_ALTSYSNAME"
      schema="nmr" 
    cascade="all"
  >
    <meta attribute="field-description">Alternative systematic names - for naming systems that allow them. E.g. XPLOR that allows both HB*, HB#, HB+, etc. for pseudoatoms.</meta>
    <cache usage="read-write" />
    <key column="ATOMSYSNAMEID" foreign-key="CHEM_ATOMSYSNAME_ALTSYSNAME_FK"/>
    <index>
      <column name="order_" sql-type="int8" not-null="true"/>
    </index>
    <element type="java.lang.String" not-null="true">
      <column name="ALTSYSNAME" sql-type="VARCHAR(80)" not-null="true"/>
    </element>
  </list>
  
  <list
    name="hbApplicationData"
    table="CHEM_ATOMSYSNAME2APPLDATA"
      schema="nmr" 
    access="property"
    cascade="all"
  >
    <meta attribute="field-description">Application-specific data</meta>
    <key column="DATAOBJECTID"/>
    <list-index column="ORDER_applicationData_" base="1"/>
    <many-to-many
      column="APPLICATIONDATAID"
      class="memops.api.Implementation.ApplicationData"
      foreign-key="IMPL_DATAOBJECT_APPLDATA_FK"
      unique="true">
    </many-to-many>
  </list>
  
  <many-to-one
    name="hbAccess"
    column="ACCESSID"
    class="memops.api.AccessControl.AccessObject" 
    not-null="false"
    unique="true"
    foreign-key="IMPL_DATAOBJECT_ACCESS_FK" 
  >
    <meta attribute="field-description">Access object that controls object access</meta>
  </many-to-one>
  
  <many-to-one
    name="hbNamingSystem"
    column="NAMINGSYSTEMID"
    class="ccp.api.molecule.ChemComp.NamingSystem" 
    cascade="merge,save-update"
    not-null="true"
    unique="false"
    foreign-key="CHEM_ATOMSYSNAME_NAMISYST_FK" 
    unique-key="atomSysNameUniqueKey" 
  >
    <meta attribute="field-description">N/A</meta>
  </many-to-one>

  </class>

</hibernate-mapping>
