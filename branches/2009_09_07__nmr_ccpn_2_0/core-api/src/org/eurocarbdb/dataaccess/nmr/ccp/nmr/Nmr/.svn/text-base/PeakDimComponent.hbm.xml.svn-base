<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
  "-//Hibernate/Hibernate Mapping DTD//EN"
  "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >

<hibernate-mapping auto-import="false" package="ccp.api.nmr.Nmr">
  <class
    name="PeakDimComponent"
    table="NMR_PEAKDIMCOMPONENT"
    schema="nmr" 
  >
  <meta attribute="extends" inherit="false">memops.general.AbstractModelObject</meta>
  <meta attribute="implements">java.lang.Comparable</meta>
  <meta attribute="class-description">Additional assignment component of peak. In many cases (TROSY, reduced-dimensionality experiments, multiplet components), the position of a peak reflects the sum of more than one NMR parameter. In those cases the additional NMR parameters are assigned through PeakDimComponents. E.g. a DQF-COSY multiplet component would have a main contribution from the shift, and one or more PeakDimComponents for the various couplings that contribute to the peak position.  NOTE: To calculate the value corresponding to the PeakDimComponent, you yourself must calculate xPoints, the (signed) number of points that are due to the PeakDimComponent. The desired value is then self.scalingFactor*self.dataDimRef.pointToValue(xPoints)</meta>
  <cache usage="read-write"/>

  <id
    name="_dbId"
    access="field"
    column="DATAOBJECTID"
    type="java.lang.Long">
    <meta attribute="scope-set">protected</meta>
    <generator class="native"/>
  </id>
  
  <many-to-one
    name="_topObject"
    access="field"
    column="TOPOBJECTID"
    class="ccp.api.nmr.Nmr.NmrProject"
    not-null="true"
    unique="false"
    foreign-key="NMR_PEAKDIMCOMP_NMRPROJECT_TO_FK"
  >
    <meta attribute="field-description">hard coded link to topObject</meta>
  </many-to-one>
  
  <property
    name="_annotation"
    access="field"
    type="java.lang.String" length="80"
    not-null="false"
  >
    <meta attribute="field-description">Descriptive text string, designed for annotation of Xpks on graphics displays. Long annotations should be avoided.</meta>
    <meta attribute="default-value">null</meta>
    <column name="ANNOTATION" sql-type="VARCHAR(80)" length="80" not-null="false"/>
  </property>
  
  <property
    name="_scalingFactor"
    access="field"
    type="java.lang.Integer"
    not-null="true"
  >
    <meta attribute="field-description">Scaling factor for PeakDimComponent. Is multiplied by the value that comes out of the dataDimRef to get the actual contribution from this PeakDimComponent to the position of the peak. E.g.  a 1D NMR quartet would have scalingFactors -3, -1, 1, 3 on its four subpeaks.   NOTE: To calculate the value corresponding to the PeakDimComponent, you yourself must calculate xPoints, the (signed) number of points that are due to the PeakDimComponent. The desired value is then self.scalingFactor*self.dataDimRef.pointToValue(xPoints)</meta>
    <meta attribute="default-value">new java.lang.Integer(1)</meta>
    <column name="SCALINGFACTOR" sql-type="INTEGER" not-null="true"/>
  </property>
  
  <property
    name="_serial"
    access="field"
    type="java.lang.Integer"
    not-null="true"
  >
    <meta attribute="field-description">Serial number of object. Serves as object main key. Serial numbers of deleted objects are not re-used. Serial numbers can only be set by the implementation. Values are in practice always positive, since negative values are interpreted as a signal to set the next free serial</meta>
    <meta attribute="default-value">null</meta>
    <column name="SERIAL" sql-type="INTEGER" not-null="true" unique-key="peakDimComponentUniqueKey" />
  </property>
  
  <list
    name="hbApplicationData"
    table="NMR_PEAKDIMCOMP2APPLDATA"
      schema="nmr" 
    access="property"
    cascade="all"
  >
    <meta attribute="field-description">Application-specific data</meta>
    <key column="DATAOBJECTID"/>
    <list-index column="ORDER_applicationData_" base="1"/>
    <many-to-many
      column="APPLICATIONDATAID"
      class="memops.api.Implementation.ApplicationData"
      foreign-key="IMPL_DATAOBJECT_APPLDATA_FK"
      unique="true">
    </many-to-many>
  </list>
  
  <many-to-one
    name="hbAccess"
    column="ACCESSID"
    class="memops.api.AccessControl.AccessObject" 
    not-null="false"
    unique="true"
    foreign-key="IMPL_DATAOBJECT_ACCESS_FK" 
  >
    <meta attribute="field-description">Access object that controls object access</meta>
  </many-to-one>
  
  <many-to-one
    name="hbDataDimRef"
    column="DATADIMREFID"
    class="ccp.api.nmr.Nmr.DataDimRef" 
    cascade="merge,save-update"
    not-null="false"
    unique="false"
    foreign-key="NMR_PEAKDIMCOMP_DATADIMREF_FK" 
  >
    <meta attribute="field-description">DataDimRef that describes reference and measurement for PeakDimComponent.</meta>
  </many-to-one>
  
  <many-to-one
    name="hbPeakDim"
    column="PEAKDIMID"
    class="ccp.api.nmr.Nmr.PeakDim" 
    cascade="merge,save-update"
    not-null="true"
    unique="false"
    foreign-key="NMR_PEAKDIMCOMP_PEAKDIM_FK" 
    unique-key="peakDimComponentUniqueKey" 
  >
    <meta attribute="field-description">N/A</meta>
  </many-to-one>
  
  <set 
    name="hbPeakDimContribs" 
    table="NMR_ABSTRACTPEAKDIMCONTRIB"
      schema="nmr" 
    inverse="true" 
    cascade="none"
  >
    <meta attribute="field-description">PeakDimContribs attached to this PeakDimComponent. </meta>
    <meta attribute="base-name">hbPeakDimContrib</meta>
    <cache usage="read-write"/>
    <key column="PEAKDIMCOMPONENTID"/>
    <one-to-many class="ccp.api.nmr.Nmr.AbstractPeakDimContrib"/>
  </set>

  </class>

</hibernate-mapping>
