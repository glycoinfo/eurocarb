<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
  "-//Hibernate/Hibernate Mapping DTD//EN"
  "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >

<hibernate-mapping auto-import="false" package="ccp.api.nmr.NmrReference">
  <class
    name="ChemAtomNmrRef"
    table="NMRR_CHEMATOMNMRREF"
    schema="nmr" 
  >
  <meta attribute="extends" inherit="false">memops.general.AbstractModelObject</meta>
  <meta attribute="implements">java.lang.Comparable</meta>
  <meta attribute="class-description">Information about refrence chemical shift for a ChemAtom. The information may apply to a ChemAtom in all ChemCompVars (linking and descriptor both 'any'), in some ChemCompVars (either linking or descriptor 'any') or in a specific ChemCompVar (all other cases). Either the meanValue or the randomCoilValue attribute must be set.</meta>
  <cache usage="read-write"/>

  <id
    name="_dbId"
    access="field"
    column="DATAOBJECTID"
    type="java.lang.Long">
    <meta attribute="scope-set">protected</meta>
    <generator class="native"/>
  </id>
  
  <many-to-one
    name="_topObject"
    access="field"
    column="TOPOBJECTID"
    class="ccp.api.nmr.NmrReference.NmrReferenceStore"
    not-null="true"
    unique="false"
    foreign-key="NMRR_CHEMATOMNMRREF_NMRREFESTOR_TO_FK"
  >
    <meta attribute="field-description">hard coded link to topObject</meta>
  </many-to-one>
  
  <property
    name="_meanValue"
    access="field"
    type="java.lang.Float"
    not-null="false"
  >
    <meta attribute="field-description">Average predicted chemical shift value (in ppm)</meta>
    <meta attribute="default-value">null</meta>
    <column name="MEANVALUE" sql-type="FLOAT" not-null="false"/>
  </property>
  
  <property
    name="_name"
    access="field"
    type="java.lang.String" length="32"
    not-null="true"
  >
    <meta attribute="field-description">Name of ChemAtom. Part of key for object.</meta>
    <meta attribute="default-value">null</meta>
    <column name="NAME" sql-type="VARCHAR(32)" length="32" not-null="true"/>
  </property>
  
  <property
    name="_randomCoilValue"
    access="field"
    type="java.lang.Float"
    not-null="false"
  >
    <meta attribute="field-description">Chemical shift for random coil conformation. Need not be the same as the mean value over the known distribution.</meta>
    <meta attribute="default-value">null</meta>
    <column name="RANDOMCOILVALUE" sql-type="FLOAT" not-null="false"/>
  </property>
  
  <property
    name="_refPoint"
    access="field"
    type="java.lang.Float"
    not-null="true"
  >
    <meta attribute="field-description">Reference point number (in floating point, first point is 0.0) for referencing chemical shift axis of distribution.</meta>
    <meta attribute="default-value">new java.lang.Float(1.0)</meta>
    <column name="REFPOINT" sql-type="FLOAT" not-null="true"/>
  </property>
  
  <property
    name="_refValue"
    access="field"
    type="java.lang.Float"
    not-null="true"
  >
    <meta attribute="field-description">Reference value (in ppm) for setting chemical shift axis of distribution.</meta>
    <meta attribute="default-value">new java.lang.Float(0.0)</meta>
    <column name="REFVALUE" sql-type="FLOAT" not-null="true"/>
  </property>
  
  <property
    name="_serial"
    access="field"
    type="java.lang.Integer"
    not-null="true"
  >
    <meta attribute="field-description">Serial number of object. Serves as object main key. Serial numbers of deleted objects are not re-used. Serial numbers can only be set by the implementation. Values are in practice always positive, since negative values are interpreted as a signal to set the next free serial</meta>
    <meta attribute="default-value">null</meta>
    <column name="SERIAL" sql-type="INTEGER" not-null="true" unique-key="chemAtomNmrRefUniqueKey" />
  </property>
  
  <property
    name="_stdDev"
    access="field"
    type="java.lang.Float"
    not-null="false"
  >
    <meta attribute="field-description">Standard deviation (in ppm) over the chemical shift distribution</meta>
    <meta attribute="default-value">null</meta>
    <column name="STDDEV" sql-type="FLOAT" not-null="false"/>
  </property>
  
  <property
    name="_subType"
    access="field"
    type="java.lang.Integer"
    not-null="true"
  >
    <meta attribute="field-description">subType of ChemAtom referred to.</meta>
    <meta attribute="default-value">new java.lang.Integer(1)</meta>
    <column name="SUBTYPE" sql-type="INTEGER" not-null="true"/>
  </property>
  
  <property
    name="_valuePerPoint"
    access="field"
    type="java.lang.Float"
    not-null="false"
  >
    <meta attribute="field-description">The value per point on the histogram axis, equivalent to the width of a column.</meta>
    <meta attribute="default-value">null</meta>
    <column name="VALUEPERPOINT" sql-type="FLOAT" not-null="false"/>
  </property>
  
  <list
    name="hbDistribution"
    table="NMRR_CHEMATOMNMRREF_DIST"
      schema="nmr" 
    cascade="all"
  >
    <meta attribute="field-description">histogram of frequency distribution. Normalised - must sum to 1.0. The shifts to which the individual points belong are defined so that point i collects the  shifts from  refValue + valuePerPoint*( i-refPoint) to refValue + valuePerPoint*( i+1-refPoint).</meta>
    <cache usage="read-write" />
    <key column="CHEMATOMNMRREFID" foreign-key="NMRR_CHEMATOMNMRREF_DIST_FK"/>
    <index>
      <column name="order_" sql-type="int8" not-null="true"/>
    </index>
    <element type="java.lang.Float" not-null="true">
      <column name="DISTRIBUTION" sql-type="FLOAT" not-null="true"/>
    </element>
  </list>
  
  <list
    name="hbApplicationData"
    table="NMRR_CHEMATOMNMRREF2APPLDATA"
      schema="nmr" 
    access="property"
    cascade="all"
  >
    <meta attribute="field-description">Application-specific data</meta>
    <key column="DATAOBJECTID"/>
    <list-index column="ORDER_applicationData_" base="1"/>
    <many-to-many
      column="APPLICATIONDATAID"
      class="memops.api.Implementation.ApplicationData"
      foreign-key="IMPL_DATAOBJECT_APPLDATA_FK"
      unique="true">
    </many-to-many>
  </list>
  
  <many-to-one
    name="hbAccess"
    column="ACCESSID"
    class="memops.api.AccessControl.AccessObject" 
    not-null="false"
    unique="true"
    foreign-key="IMPL_DATAOBJECT_ACCESS_FK" 
  >
    <meta attribute="field-description">Access object that controls object access</meta>
  </many-to-one>
  
  <many-to-one
    name="hbChemCompNmrRef"
    column="CHEMCOMPNMRREFID"
    class="ccp.api.nmr.NmrReference.ChemCompNmrRef" 
    cascade="merge,save-update"
    not-null="true"
    unique="false"
    foreign-key="NMRR_CHEMATOMNMRREF_CHEMCOMPNMRREF_FK" 
    unique-key="chemAtomNmrRefUniqueKey" 
  >
    <meta attribute="field-description">N/A</meta>
  </many-to-one>
  
  <set 
    name="hbChemAtomShiftCorrs" 
    table="NMRR_CHEMATOMSHIFTCORR"
      schema="nmr" 
    inverse="true" 
    cascade="all"
  >
    <meta attribute="field-description">N/A</meta>
    <meta attribute="base-name">hbChemAtomShiftCorr</meta>
    <cache usage="read-write"/>
    <key column="CHEMATOMNMRREFID"/>
    <one-to-many class="ccp.api.nmr.NmrReference.ChemAtomShiftCorr"/>
  </set>
  
  <set 
    name="hbChemCompVarNmrRefs" 
    table="NMRR_CHEMCOMPVARNMRREF2CHEMATOMNMRREFS"
      schema="nmr" 
    inverse="true" 
    cascade="none"
  >
    <meta attribute="field-description">ChemCompNmrRefs that contain this ChemAtomNmrRef.</meta>
    <meta attribute="base-name">hbChemCompVarNmrRef</meta>
    <cache usage="read-write"/>
    <key column="CHEMATOMNMRREFID" foreign-key="NMRR_CHEMCOMPVARNMRREF_CHEMATOMNMRREFS_FK"/>
    <many-to-many column="CHEMCOMPVARNMRREFID" class="ccp.api.nmr.NmrReference.ChemCompVarNmrRef" foreign-key="NMRR_CHEMATOMNMRREF_CHEMCOMPVARNMRREFS_FK"/>
  </set>

  </class>

</hibernate-mapping>
