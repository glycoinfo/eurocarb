<?xml version='1.0'?>
<!--
#######################################################################

CCPN Data Model version 2.0.b3

Autogenerated by XmlModelIo revision 1.17 on ?
  from data model element ccp.nmr.NmrCalc.MeasurementListData revision ?

#######################################################################
======================COPYRIGHT/LICENSE START==========================

MeasurementListData.xml: xmlmodel model for CCPN data model, MetaClass ccp.nmr.NmrCalc.MeasurementListData

Copyright (C) 2007  (CCPN Project)

=======================================================================

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.
 
A copy of this license can be found in ../../../../../license/LGPL.license
 
This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.
 
You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA


======================COPYRIGHT/LICENSE END============================

for further information, please contact :

- CCPN website (http://www.ccpn.ac.uk/)

- email: ccpn@bioc.cam.ac.uk

=======================================================================

If you are using this software for academic purposes, we suggest
quoting the following references:

===========================REFERENCE START=============================
Rasmus H. Fogh, Wayne Boucher, Wim F. Vranken, Anne
Pajon, Tim J. Stevens, T.N. Bhat, John Westbrook, John M.C. Ionides and
Ernest D. Laue (2005). A framework for scientific data modeling and automated
software development. Bioinformatics 21, 1678-1684.


This file was generated with the Memops software generation framework,
and contains original contributions embedded in the framework

===========================REFERENCE END===============================
-->

<MetaClass name="MeasurementListData"
 guid="www.ccpn.ac.uk_Fogh_2009-04-16-16:23:58_00003"
 container="www.ccpn.ac.uk_Fogh_2009-04-16-16:23:57_00001"
 isAbstract="false" isImplicit="false" isLeaf="false" isRoot="false"
 isSingleton="false" partitionsChildren="false" visibility="public_vis">
  <documentation>Nmr.MeasurementList data.</documentation>
  <keyNames>
    <item>serial</item>
  </keyNames>
  <supertypes>
    <item>www.ccpn.ac.uk_Fogh_2009-04-16-16:23:57_00006</item>
  </supertypes>
  <taggedValues>
    <item tag="repositoryId">$Id: MeasurementListData.xml,v 1.3.2.2 2009/09/14 14:45:25 wimvranken Exp $</item>
    <item tag="repositoryTag">$Name: release_2_1_0_2 $</item>
  </taggedValues>


  <MetaOperation name="getMeasurementList"
   guid="www.ccpn.ac.uk_Fogh_2009-04-16-16:24:03_00024"
   container="www.ccpn.ac.uk_Fogh_2009-04-16-16:23:58_00003"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <target>www.ccpn.ac.uk_Fogh_2009-04-16-16:24:03_00022</target>
    <codeStubs>
      <item tag="java">result = getRun().getNmrCalcStore().getNmrProject().findFirstMeasurementList("serial", getMeasurementListSerial());</item>
      <item tag="python">result = self.topObject.nmrProject.findFirstMeasurementList(serial=self.measurementListSerial)</item>
    </codeStubs>
  </MetaOperation>

  <MetaRole name="measurementList"
   guid="www.ccpn.ac.uk_Fogh_2009-04-16-16:24:03_00022"
   container="www.ccpn.ac.uk_Fogh_2009-04-16-16:23:58_00003"
   baseName="measurementList" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="true"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00010</valueType>
  </MetaRole>

  <MetaAttribute name="measurementListSerial"
   guid="www.ccpn.ac.uk_Fogh_2009-04-16-16:24:03_00023"
   container="www.ccpn.ac.uk_Fogh_2009-04-16-16:23:58_00003"
   baseName="measurementListSerial" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>Serial number of Nmr.AbstractMeasurementList - used to derive actual object.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00032</valueType>
  </MetaAttribute>

  <MetaOperation name="setMeasurementList"
   guid="www.ccpn.ac.uk_Fogh_2009-04-16-16:24:03_00025"
   container="www.ccpn.ac.uk_Fogh_2009-04-16-16:23:58_00003"
   isAbstract="false" isImplicit="false" isQuery="false" opType="set"
   scope="instance_level" visibility="public_vis">
    <target>www.ccpn.ac.uk_Fogh_2009-04-16-16:24:03_00022</target>
    <codeStubs>
      <item tag="java">if (value == null)
  setMeasurementListSerial(null);
else if (getRun().getNmrCalcStore().getNmrProject() ==
value.getNmrProject())
  setMeasurementListSerial(value.getSerial());
else
  throw new memops.general.ApiException(value + " does not belong to NmrCalcStore.nmrProject " + getRun().getNmrCalcStore().getNmrProject());</item>
      <item tag="python">if value is None:
  self.measurementListSerial =None
elif self.topObject.nmrProject is value.nmrProject:
  self.measurementListSerial = value.serial
else:
  raise ApiError("%s does not belong to NmrCalcStore.nmrProject %s" % (value,self.topObject.nmrProject ))</item>
    </codeStubs>
  </MetaOperation>
</MetaClass>

