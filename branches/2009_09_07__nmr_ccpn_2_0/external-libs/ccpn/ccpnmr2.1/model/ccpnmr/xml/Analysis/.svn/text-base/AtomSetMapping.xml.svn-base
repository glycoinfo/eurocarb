<?xml version='1.0'?>
<!--
#######################################################################

CCPN Data Model version 2.0.b3

Autogenerated by XmlModelIo revision 1.17 on ?
  from data model element ccpnmr.Analysis.AtomSetMapping revision ?

#######################################################################
======================COPYRIGHT/LICENSE START==========================

AtomSetMapping.xml: xmlmodel model for CCPN data model, MetaClass ccpnmr.Analysis.AtomSetMapping

Copyright (C) 2007 Rasmus Fogh (CCPN Project)

=======================================================================

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.
 
A copy of this license can be found in ../../../../license/LGPL.license
 
This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.
 
You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA


======================COPYRIGHT/LICENSE END============================

for further information, please contact :

- CCPN website (http://www.ccpn.ac.uk/)

- email: ccpn@bioc.cam.ac.uk

=======================================================================

If you are using this software for academic purposes, we suggest
quoting the following references:

===========================REFERENCE START=============================
Wim F. Vranken, Wayne Boucher, Tim J. Stevens, Rasmus
H. Fogh, Anne Pajon, Miguel Llinas, Eldon L. Ulrich, John L. Markley, John
Ionides and Ernest D. Laue (2005). The CCPN Data Model for NMR Spectroscopy:
Development of a Software Pipeline. Proteins 59, 687 - 696.

Rasmus H. Fogh, Wayne Boucher, Wim F. Vranken, Anne
Pajon, Tim J. Stevens, T.N. Bhat, John Westbrook, John M.C. Ionides and
Ernest D. Laue (2005). A framework for scientific data modeling and automated
software development. Bioinformatics 21, 1678-1684.


This file was generated with the Memops software generation framework,
and contains original contributions embedded in the framework

===========================REFERENCE END===============================
-->

<MetaClass name="AtomSetMapping"
 guid="www.ccpn.ac.uk_Fogh_2006-08-17-14:16:22_00014"
 container="www.ccpn.ac.uk_Fogh_2006-08-17-14:16:20_00002"
 isAbstract="false" isImplicit="false" isLeaf="false" isRoot="false"
 isSingleton="false" partitionsChildren="false" visibility="public_vis">
  <documentation>Stores (pseudo)atom and residue name to use for display, graphical user interfaces etc., and links to appropriate Residue, AtomSets, and ChemAtomSet.

NB the various links are not independent, and the API does *not* guarantee consistency. It is up to CcpNmr Analysis to make sure the information is up-to-date. This behaviour is only tolerated because this is a program-specific part of the model. </documentation>
  <keyNames>
    <item>name</item>
  </keyNames>
  <supertypes>
    <item>www.ccpn.ac.uk_Fogh_2006-09-14-16:28:57_00005</item>
  </supertypes>
  <constructorCodeStubs>
    <item tag="java">/* automatic set self.elementSymbol. */
/*  Based on all atoms in an atomSet being of the same type. */

if (getElementSymbol() == null)
{
  java.util.List&lt;ccpnmr.api.Analysis.AtomSetMapping&gt; ll = new java.util.LinkedList&lt;ccpnmr.api.Analysis.AtomSetMapping&gt;();
  ll.add(this);
  java.util.Set&lt;java.lang.String&gt; elements = new java.util.HashSet&lt;java.lang.String&gt;();
  while (!ll.isEmpty())
  {
    ccpnmr.api.Analysis.AtomSetMapping x = ll.remove(0);
    for (ccpnmr.api.Analysis.AtomSetMapping y: x.getAtomSetMappings())
      ll.add(y);
    for (ccp.api.nmr.Nmr.AtomSet z: x.getAtomSets())
      elements.add(z.findFirstAtom().getChemAtom().getElementSymbol());
  }
  if (elements.size() &gt; 1)
    throw new memops.general.ApiException("creating AtomSetMapping combining different chemical elements");
  else
    setElementSymbol(elements.iterator().next());
}</item>
    <item tag="python"># automatic set self.elementSymbol.
# Based on all atoms in an atomSet being of the same type.
if not self.elementSymbol:
  ll = [self]
  elements = set()
  for x in ll:
    for y in x.atomSetMappings:
      ll.append(y)
    for z in x.atomSets:
      elements.append(z.findFirstAtom().chemAtom.elementSymbol)

  element = elements.pop()
  if elements:
    raise ApiError("creating AtomSetMapping combining different chemical elements")

  self.elementSymbol = element</item>
  </constructorCodeStubs>
  <taggedValues>
    <item tag="repositoryId">$Id: AtomSetMapping.xml,v 1.39.2.10 2009/09/14 14:45:21 wimvranken Exp $</item>
    <item tag="repositoryTag">$Name: release_2_1_0_2 $</item>
  </taggedValues>

  <!-- Start constraints for <MetaClass: ccpnmr.Analysis.AtomSetMapping>: -->
  <MetaConstraint name="only_ambiguous_can_have_atomSetMappings"
   guid="www.ccpn.ac.uk_Fogh_2006-08-17-14:16:22_00015"
   container="www.ccpn.ac.uk_Fogh_2006-08-17-14:16:22_00014"
   isImplicit="false">
    <codeStubs>
      <item tag="java">"ambiguous".equals(getMappingType()) || (getAtomSetMappings().size() == 0)</item>
      <item tag="python">self.mappingType == 'ambiguous' or not self.atomSetMappings</item>
    </codeStubs>
  </MetaConstraint>
  <!-- End constraints for <MetaClass: ccpnmr.Analysis.AtomSetMapping>: -->


  <MetaRole name="atomSetMappings"
   guid="www.ccpn.ac.uk_Fogh_2006-08-17-15:10:57_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-17-14:16:22_00014"
   baseName="atomSetMapping" changeability="changeable" hicard="-1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>the AtomSetMappings contained by the AtomSetMapping, often used to specify that an ambiguous mapping contains non-ambiguous mappings</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-17-14:16:22_00014</valueType>

    <!-- Start constraints for <MetaRole: ccpnmr.Analysis.AtomSetMapping.atomSetMappings>: -->
    <MetaConstraint name="no_atomSetMapping_cycles"
     guid="www.ccpn.ac.uk_Fogh_2006-08-17-15:11:05_00001"
     container="www.ccpn.ac.uk_Fogh_2006-08-17-15:10:57_00001"
     isImplicit="false">
      <codeStubs>
        <item tag="java">isValid = true;
java.util.List&lt;ccpnmr.api.Analysis.AtomSetMapping&gt; ll = new java.util.ArrayList&lt;ccpnmr.api.Analysis.AtomSetMapping&gt;();
ll.add(other);
while (ll.size() &gt; 0)
{
  ccpnmr.api.Analysis.AtomSetMapping vv = ll.remove(0);
  if (vv == this)
  {
    isValid = false;
    break;
  }
  else
  {
    ll.addAll(vv.getAtomSetMappings());
  }
}
</item>
        <item tag="python">isValid = True
ll = [value]
for vv in ll:
  if vv is self:
    isValid = False
    break
  else:
    ll.extend(vv.atomSetMappings)
</item>
      </codeStubs>
    </MetaConstraint>
    <!-- End constraints for <MetaRole: ccpnmr.Analysis.AtomSetMapping.atomSetMappings>: -->
  </MetaRole>

  <MetaAttribute name="atomSetSerials"
   guid="www.ccpn.ac.uk_Fogh_2006-08-17-15:11:06_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-17-14:16:22_00014"
   baseName="atomSetSerial" changeability="changeable" hicard="-1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>serial numbers of atomSets represented by the mapping</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00032</valueType>
  </MetaAttribute>

  <MetaRole name="atomSets"
   guid="www.ccpn.ac.uk_Fogh_2006-08-17-15:11:31_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-17-14:16:22_00014"
   baseName="atomSet" changeability="frozen" hicard="-1" isAbstract="false"
   isAutomatic="false" isDerived="true" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="0"
   noDeleteIfSet="false" partitionsChildren="false" scope="instance_level"
   visibility="public_vis">
    <documentation>the AtomSet represented by the AtomSetMapping </documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00015</valueType>
  </MetaRole>

  <MetaRole name="chemAtomSet"
   guid="www.ccpn.ac.uk_Fogh_2006-08-17-15:11:05_00002"
   container="www.ccpn.ac.uk_Fogh_2006-08-17-14:16:22_00014"
   baseName="chemAtomSet" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>the ChemAtomSet represented by the AtomSetMapping </documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:52_00014</valueType>
  </MetaRole>

  <MetaAttribute name="elementSymbol"
   guid="www.ccpn.ac.uk_Fogh_2006-08-17-15:11:06_00004"
   container="www.ccpn.ac.uk_Fogh_2006-08-17-14:16:22_00014"
   baseName="elementSymbol" changeability="frozen" hicard="1" isAbstract="false"
   isAutomatic="true" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="1"
   scope="instance_level" visibility="public_vis">
    <documentation>Element symbol of element corresponding to AtomSets. Automatically calculated at creation time.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00037</valueType>

    <!-- Start constraints for <MetaAttribute: ccpnmr.Analysis.AtomSetMapping.elementSymbol>: -->
    <MetaConstraint name="length_is_one_or_two"
     guid="www.ccpn.ac.uk_Fogh_2006-08-17-15:11:06_00005"
     container="www.ccpn.ac.uk_Fogh_2006-08-17-15:11:06_00004"
     isImplicit="false">
      <codeStubs>
        <item tag="java">(value == null ) || (value.length() == 1) || (value.length() == 2)</item>
        <item tag="python">value is None or len(value) in (1, 2)</item>
      </codeStubs>
    </MetaConstraint>
    <!-- End constraints for <MetaAttribute: ccpnmr.Analysis.AtomSetMapping.elementSymbol>: -->
  </MetaAttribute>

  <MetaOperation name="getAtomSets"
   guid="www.ccpn.ac.uk_Fogh_2006-08-17-15:11:06_00006"
   container="www.ccpn.ac.uk_Fogh_2006-08-17-14:16:22_00014"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived link atomSets</documentation>
    <target>www.ccpn.ac.uk_Fogh_2006-08-17-15:11:31_00001</target>
    <codeStubs>
      <item tag="java">ccp.api.nmr.Nmr.NmrProject nmrProject = ((ccpnmr.api.Analysis.AnalysisProject) getTopObject()).getNmrProject();
result = new java.util.HashSet&lt;ccp.api.nmr.Nmr.AtomSet&gt;();

for (Integer serial: getAtomSetSerials())
{
  ccp.api.nmr.Nmr.AtomSet as = nmrProject.findFirstAtomSet("serial", serial);
  if (as != null)
    result.add(as);
}</item>
      <item tag="python">func = self.topObject.nmrProject.findFirstAtomSet
aset = set(func(serial=x) for x in self.atomSetSerials)
if None in aset:
  aset.remove(None)
result = frozenset(aset)</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="getResonances"
   guid="www.ccpn.ac.uk_Fogh_2006-08-17-15:11:06_00008"
   container="www.ccpn.ac.uk_Fogh_2006-08-17-14:16:22_00014"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived link resonances</documentation>
    <target>www.ccpn.ac.uk_Fogh_2006-08-16-18:20:10_00007</target>
    <codeStubs>
      <item tag="java">ccp.api.nmr.Nmr.NmrProject nmrProject = ((ccpnmr.api.Analysis.AnalysisProject) getTopObject()).getNmrProject();
result = new java.util.HashSet&lt;ccp.api.nmr.Nmr.Resonance&gt;();

for (Integer serial: getResonanceSerials())
{
  ccp.api.nmr.Nmr.Resonance rs = nmrProject.findFirstResonance("serial", serial);
  if (rs != null)
    result.add(rs);
}</item>
      <item tag="python">func = self.topObject.nmrProject.findFirstResonance
aset = set(func(serial=x) for x in self.resonanceSerials)
if None in aset:
  aset.remove(None)
result = frozenset(aset)</item>
    </codeStubs>
  </MetaOperation>

  <MetaAttribute name="mappingType"
   guid="www.ccpn.ac.uk_Fogh_2006-08-17-15:11:06_00003"
   container="www.ccpn.ac.uk_Fogh_2006-08-17-14:16:22_00014"
   baseName="mappingType" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>whether the mapping is simple, ambiguous (points to multiple other mappings), nonstereo (non-stereospecific prochiral like Hba or Hbb) or stereo (like Hb2 or Hb3)</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-17-14:16:22_00018</valueType>
    <defaultValue>
      <item>simple</item>
    </defaultValue>
  </MetaAttribute>

  <MetaAttribute name="name"
   guid="www.ccpn.ac.uk_Fogh_2006-08-17-15:11:05_00003"
   container="www.ccpn.ac.uk_Fogh_2006-08-17-14:16:22_00014"
   baseName="name" changeability="frozen" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="1"
   scope="instance_level" visibility="public_vis">
    <documentation>(pseudo)atom name.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00037</valueType>
  </MetaAttribute>

  <MetaRole name="residueMapping"
   guid="www.ccpn.ac.uk_Fogh_2006-08-17-15:11:13_00006"
   container="www.ccpn.ac.uk_Fogh_2006-08-17-14:16:22_00014"
   aggregation="composite" baseName="residueMapping" changeability="frozen"
   hicard="1" hierarchy="parent" isAbstract="false" isAutomatic="false"
   isDerived="false" isImplementation="false" isImplicit="false"
   isOrdered="false" isUnique="true" locard="1" noDeleteIfSet="false"
   partitionsChildren="false" scope="instance_level" visibility="public_vis">
    <otherRole>www.ccpn.ac.uk_Fogh_2006-08-17-15:11:13_00007</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-17-14:16:23_00001</valueType>
  </MetaRole>

  <MetaAttribute name="resonanceSerials"
   guid="www.ccpn.ac.uk_Fogh_2006-08-17-15:11:06_00002"
   container="www.ccpn.ac.uk_Fogh_2006-08-17-14:16:22_00014"
   baseName="resonanceSerial" changeability="changeable" hicard="-1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>serial numbers of resonances represented by the mapping, keys for derived link</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00032</valueType>
  </MetaAttribute>

  <MetaRole name="resonances"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:10_00007"
   container="www.ccpn.ac.uk_Fogh_2006-08-17-14:16:22_00014"
   baseName="resonance" changeability="frozen" hicard="-1" isAbstract="false"
   isAutomatic="false" isDerived="true" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="0"
   noDeleteIfSet="false" partitionsChildren="false" scope="instance_level"
   visibility="public_vis">
    <documentation>Resonances that AtomSetMapping is associated with. This link does not have to be filled in.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00033</valueType>
  </MetaRole>
</MetaClass>

