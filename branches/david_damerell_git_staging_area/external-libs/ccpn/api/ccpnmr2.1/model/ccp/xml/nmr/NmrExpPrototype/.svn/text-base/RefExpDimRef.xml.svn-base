<?xml version='1.0'?>
<!--
#######################################################################

CCPN Data Model version 2.0.b3

Autogenerated by XmlModelIo revision 1.17 on ?
  from data model element ccp.nmr.NmrExpPrototype.RefExpDimRef revision ?

#######################################################################
======================COPYRIGHT/LICENSE START==========================

RefExpDimRef.xml: xmlmodel model for CCPN data model, MetaClass ccp.nmr.NmrExpPrototype.RefExpDimRef

Copyright (C) 2007 Rasmus Fogh (CCPN Project)

=======================================================================

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.
 
A copy of this license can be found in ../../../../../license/LGPL.license
 
This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.
 
You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA


======================COPYRIGHT/LICENSE END============================

for further information, please contact :

- CCPN website (http://www.ccpn.ac.uk/)

- email: ccpn@bioc.cam.ac.uk

=======================================================================

If you are using this software for academic purposes, we suggest
quoting the following references:

===========================REFERENCE START=============================
Wim F. Vranken, Wayne Boucher, Tim J. Stevens, Rasmus
H. Fogh, Anne Pajon, Miguel Llinas, Eldon L. Ulrich, John L. Markley, John
Ionides and Ernest D. Laue (2005). The CCPN Data Model for NMR Spectroscopy:
Development of a Software Pipeline. Proteins 59, 687 - 696.

Rasmus H. Fogh, Wayne Boucher, Wim F. Vranken, Anne
Pajon, Tim J. Stevens, T.N. Bhat, John Westbrook, John M.C. Ionides and
Ernest D. Laue (2005). A framework for scientific data modeling and automated
software development. Bioinformatics 21, 1678-1684.


This file was generated with the Memops software generation framework,
and contains original contributions embedded in the framework

===========================REFERENCE END===============================
-->

<MetaClass name="RefExpDimRef"
 guid="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:45_00026"
 container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:45_00019"
 isAbstract="false" isImplicit="false" isLeaf="false" isRoot="false"
 isSingleton="false" partitionsChildren="false" visibility="public_vis">
  <documentation>ExpDimRef for prototype experiment. Maps ExpDimRef on ExpStep, from which the information necessary for creating ExpDimRef can be found.

If there is more than one ExpGraph in the NmrExpPrototype, in general each RefExpDim will have an equivalent set of RefExpDimRef for every ExpGraph. Where this is not the case it may be assumed that the 'missing' RefExpDimRefs are 1) identical in content to those present and 2) correspond to the same ExpStep as those given. This convention is used to avoid having several identical RefExpDimRefs just because there are several ExpGraphs.

Note that the serial attribute is used to match Nmr.ExpDimRefs to RefExpDimRefs, so that objects with the same serial correspond to each other. </documentation>
  <keyNames>
    <item>serial</item>
  </keyNames>
  <supertypes>
    <item>www.ccpn.ac.uk_Fogh_2006-09-14-16:28:57_00005</item>
  </supertypes>
  <taggedValues>
    <item tag="repositoryId">$Id: RefExpDimRef.xml,v 1.44.2.10 2009/09/14 14:45:29 wimvranken Exp $</item>
    <item tag="repositoryTag">$Name: release_2_1_0_2 $</item>
  </taggedValues>


  <MetaAttribute name="constantTime"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:00_00013"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:45_00026"
   baseName="constantTime" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>Is the dimension constant time, variable time, or partial (harmonica type)?</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:45_00031</valueType>
    <defaultValue>
      <item>variable</item>
    </defaultValue>
  </MetaAttribute>

  <MetaAttribute name="coupledIsotopeCodes"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:00_00012"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:45_00026"
   baseName="coupledIsotopeCode" changeability="changeable" hicard="-1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="true" isUnique="false"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>Isotope codes for isotopes, couplings to which are active in the dimension. Note that homonuclear couplings (e.g. proton couplings in a proton dimension) must be specified explicitly if they are to be treated as active. Except for constant-time experiments, homonuclear couplings are normally active, but they may be ignored if they are not resolved and not of interest. </documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00037</valueType>
  </MetaAttribute>

  <MetaRole name="coupledIsotopes"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:00_00006"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:45_00026"
   baseName="coupledIsotope" changeability="frozen" hicard="-1"
   isAbstract="false" isAutomatic="false" isDerived="true"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>Isotopes couplings to which are active in a given dimension.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-18:19:49_00003</valueType>
  </MetaRole>

  <MetaRole name="expMeasurement"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:01_00019"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:45_00026"
   baseName="expMeasurement" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>ExpMeasurement to which the RefExpDimRef applies. The reference may be relevant for one or several ExpGraphs.</documentation>
    <otherRole>www.ccpn.ac.uk_Fogh_2006-08-16-18:23:01_00020</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:45_00034</valueType>
  </MetaRole>

  <MetaRole name="expSteps"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:00_00008"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:45_00026"
   baseName="expStep" changeability="changeable" hicard="-1" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="0"
   noDeleteIfSet="false" partitionsChildren="false" scope="instance_level"
   visibility="public_vis">
    <documentation>ExpSteps that corresponds to RefExpDimRef. The connection to the ExpMeasurenment is handled via the direct link to ExpMeasurement. The expStep link serves to distinguish which of several ExpSteps compatible with the ExpMeasurement was actually to make a measurement (e.g. was the N15 magnetisation measured before or after the CA magnetisaion in an HNCA experiment.</documentation>
    <otherRole>www.ccpn.ac.uk_Fogh_2006-08-16-18:23:00_00007</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:45_00028</valueType>

    <!-- Start constraints for <MetaRole: ccp.nmr.NmrExpPrototype.RefExpDimRef.expSteps>: -->
    <MetaConstraint name="ExpStep_and_RefExpDimRef_must_belong_to_same_ExpMeasurement"
     guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:00_00009"
     container="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:00_00008"
     isImplicit="false">
      <codeStubs>
        <item tag="java">self.getExpMeasurement() == other.getExpMeasurement()</item>
        <item tag="python">self.expMeasurement is value.expMeasurement</item>
      </codeStubs>
    </MetaConstraint>
    <!-- End constraints for <MetaRole: ccp.nmr.NmrExpPrototype.RefExpDimRef.expSteps>: -->
  </MetaRole>

  <MetaOperation name="getCoupledIsotopes"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:00_00014"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:45_00026"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived link coupledIsotopes</documentation>
    <target>www.ccpn.ac.uk_Fogh_2006-08-16-18:23:00_00006</target>
    <codeStubs>
      <item tag="java">result = new java.util.HashSet&lt;ccp.api.molecule.ChemElement.Isotope&gt;();
for (java.lang.String ss: getCoupledIsotopeCodes()) {
  int nn = ss.length();
  int firstLetter = nn-2;
  if ((nn &gt;= 2) &amp;&amp; ("0123456789".indexOf(ss.substring(nn-2,nn-1)) &gt;= 0))
    firstLetter = nn-1;
  java.lang.String atomSymbol = ss.substring(firstLetter).toUpperCase();
  java.lang.Integer massNumber = Integer.valueOf(ss.substring(0, firstLetter));
  java.util.List&lt;java.lang.Object&gt; keys = memops.universal.Util.argsToList((java.lang.Object) atomSymbol, massNumber);
  result.add(ccp.api.molecule.ChemElement.Isotope.getByKey(getRoot().getCurrentChemElementStore(), keys));
}</item>
      <item tag="python">result = []
for ss in self.coupledIsotopeCodes:
  if ss[-2] in '0123456789':
    firstLetter = -1
  else:
    firstLetter = -2
  atomSymbol = ss[firstLetter:].capitalize()
  massNumber = int(ss[:firstLetter])
  
  result.append(ccp.api.molecule.ChemElement.Isotope.getByKey(self.root.currentChemElementStore, (atomSymbol, massNumber)))
#
result = frozenset(result)</item>
    </codeStubs>
  </MetaOperation>

  <MetaAttribute name="groupingId"
   guid="www.ccpn.ac.uk_Fogh_2007-04-03-15:13:51_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:45_00026"
   baseName="groupingId" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>groupingId divides RefExpDimRef from the same parent into groups - all RefExpDimRef with the same groupingId belong in the same group. RefExpDimRef from the same group can appear on the same peak - RefExpDimRef from different groups can not.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00032</valueType>
    <defaultValue>
      <item>1</item>
    </defaultValue>
  </MetaAttribute>

  <MetaRole name="refExpDim"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:22:59_00014"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:45_00026"
   aggregation="composite" baseName="refExpDim" changeability="frozen"
   hicard="1" hierarchy="parent" isAbstract="false" isAutomatic="false"
   isDerived="false" isImplementation="false" isImplicit="false"
   isOrdered="false" isUnique="true" locard="1" noDeleteIfSet="false"
   partitionsChildren="false" scope="instance_level" visibility="public_vis">
    <otherRole>www.ccpn.ac.uk_Fogh_2006-08-16-18:23:00_00001</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:45_00025</valueType>
  </MetaRole>

  <MetaAttribute name="serial"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:00_00010"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:45_00026"
   baseName="serial" changeability="frozen" hicard="1" isAbstract="false"
   isAutomatic="true" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="1"
   scope="instance_level" visibility="public_vis">
    <documentation>Serial number of object. Serves as object main key. Serial numbers of deleted objects are not re-used. Serial numbers can only be set by the implementation. Values are in practice always positive, since negative values are interpreted as a signal to set the next free serial</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00032</valueType>
  </MetaAttribute>

  <MetaAttribute name="validScalingFactors"
   guid="www.ccpn.ac.uk_Fogh_2007-04-03-15:13:51_00002"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:45_00026"
   baseName="validScalingFactor" changeability="changeable" hicard="-1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="true" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>List of valid scaling factors for RefExpDimRef. If empty, many different factors are allowed. The position of a peak is calculated as the sum over ExpDimRef scaling factors times position values (e.g. position in ppm).</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00031</valueType>
    <defaultValue>
      <item>1.0</item>
    </defaultValue>
  </MetaAttribute>
</MetaClass>

