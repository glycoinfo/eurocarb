<?xml version='1.0'?>
<!--
#######################################################################

CCPN Data Model version 2.0.b3

Autogenerated by XmlModelIo revision 1.17 on ?
  from data model element ccp.nmr.Nmr.FidDataDim revision ?

#######################################################################
======================COPYRIGHT/LICENSE START==========================

FidDataDim.xml: xmlmodel model for CCPN data model, MetaClass ccp.nmr.Nmr.FidDataDim

Copyright (C) 2007 Rasmus Fogh (CCPN Project)

=======================================================================

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.
 
A copy of this license can be found in ../../../../../license/LGPL.license
 
This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.
 
You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA


======================COPYRIGHT/LICENSE END============================

for further information, please contact :

- CCPN website (http://www.ccpn.ac.uk/)

- email: ccpn@bioc.cam.ac.uk

=======================================================================

If you are using this software for academic purposes, we suggest
quoting the following references:

===========================REFERENCE START=============================
Wim F. Vranken, Wayne Boucher, Tim J. Stevens, Rasmus
H. Fogh, Anne Pajon, Miguel Llinas, Eldon L. Ulrich, John L. Markley, John
Ionides and Ernest D. Laue (2005). The CCPN Data Model for NMR Spectroscopy:
Development of a Software Pipeline. Proteins 59, 687 - 696.

Rasmus H. Fogh, Wayne Boucher, Wim F. Vranken, Anne
Pajon, Tim J. Stevens, T.N. Bhat, John Westbrook, John M.C. Ionides and
Ernest D. Laue (2005). A framework for scientific data modeling and automated
software development. Bioinformatics 21, 1678-1684.


This file was generated with the Memops software generation framework,
and contains original contributions embedded in the framework

===========================REFERENCE END===============================
-->

<MetaClass name="FidDataDim"
 guid="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00032"
 container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00006"
 isAbstract="false" isImplicit="false" isLeaf="false" isRoot="false"
 isSingleton="false" partitionsChildren="false" visibility="public_vis">
  <documentation>An FID dimension or any other dimension with a regular grid of values. A FidDataDim can contain any kind of regularly sampled data subjected to any kind of processing, except that data in the Fourier transformed domain relative to the originally acquired data must be put in a FreqDataDim.</documentation>
  <keyNames>
    <item>dim</item>
  </keyNames>
  <supertypes>
    <item>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00008</item>
  </supertypes>
  <constructorCodeStubs>
    <item tag="java">boolean foundRefData = false;
ccp.api.nmr.Nmr.ExpDim expDim = getExpDim();
java.util.List&lt;ccp.api.nmr.Nmr.ExpDimRef&gt; expDimRefs =
expDim.sortedExpDimRefs();
for (ccp.api.nmr.Nmr.ExpDimRef expDimRef: expDimRefs)
{
  ccp.api.nmr.NmrExpPrototype.RefExpDimRef refExpDimRef =
expDimRef.getRefExpDimRef();
  if (refExpDimRef != null)
  {
    foundRefData = true;
    java.util.List&lt;java.lang.Float&gt; scalingFactors =
refExpDimRef.getValidScalingFactors();
    ccp.api.nmr.Nmr.DimensionScaling x = newDimensionScaling(expDimRef);
    x.setScalingFactors(scalingFactors);
  }
}

if (!foundRefData)
{
  if (expDimRefs.size() != 1)
    expDimRefs =
memops.universal.Util.copyToList(expDim.findAllExpDimRefs("measurementType",
"Shift"));

  if (expDimRefs.size() == 1)
  {
    java.util.List&lt;java.lang.Float&gt; scalingFactors = new
java.util.ArrayList&lt;java.lang.Float&gt;();
    scalingFactors.add(1.0f);
    ccp.api.nmr.Nmr.DimensionScaling x =
newDimensionScaling(expDimRefs.get(0));
    x.setScalingFactors(scalingFactors);
  }
}</item>
    <item tag="python">foundRefData = False
expDimRefs = self.expDim.sortedExpDimRefs()
for expDimRef in expDimRefs:
  refExpDimRef = expDimRef.refExpDimRef
  if refExpDimRef is not None:
    foundRefData = True
    scalingFactors = refExpDimRef.validScalingFactors
    self.newDimensionScaling(expDimRef=expDimRef, scalingFactors=scalingFactors)
if not foundRefData:
  if len(expDimRefs) != 1:
    expDimRefs = list(self.expDim.findAllExpDimRefs(measurementType='Shift'))
  if len(expDimRefs) == 1:
    self.newDimensionScaling(expDimRef=expDimRefs[0], scalingFactors=(1.0,))</item>
  </constructorCodeStubs>
  <taggedValues>
    <item tag="repositoryId">$Id: FidDataDim.xml,v 1.45.2.10 2009/09/14 14:45:22 wimvranken Exp $</item>
    <item tag="repositoryTag">$Name: release_2_1_0_2 $</item>
  </taggedValues>


  <MetaAttribute name="alternateSign"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:07_00015"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00032"
   baseName="alternateSign" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>Default is 'False'. If true means that every second (real or complex) point should have its sign changed before further processing, as for classical TPPI or States-TPPI.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00028</valueType>
    <defaultValue>
      <item>false</item>
    </defaultValue>
  </MetaAttribute>

  <MetaAttribute name="firstValue"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:07_00006"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00032"
   baseName="firstValue" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>Value of first point.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00031</valueType>
    <defaultValue>
      <item>0.0</item>
    </defaultValue>
  </MetaAttribute>

  <MetaOperation name="getMaxValue"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:07_00017"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00032"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>get function for derived attribute maxValue</documentation>
    <target>www.ccpn.ac.uk_Fogh_2006-08-16-18:20:07_00008</target>
    <codeStubs>
      <item tag="java">result = getFirstValue() + (getNumPointsValid()-1) * getValuePerPoint();</item>
      <item tag="python">result = self.firstValue + (self.numPointsValid-1) * self.valuePerPoint</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="getSpectralWidth"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:07_00019"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00032"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>get function for derived attribute spectralWidth</documentation>
    <target>www.ccpn.ac.uk_Fogh_2006-08-16-18:20:07_00013</target>
    <codeStubs>
      <item tag="java">if (getIsComplex())
  result = 1.0f / getValuePerPoint();
else
  result = 0.5f / getValuePerPoint();</item>
      <item tag="python">if self.isComplex:
  result = 1.0/self.valuePerPoint
else:
  result = 0.5/self.valuePerPoint</item>
    </codeStubs>
  </MetaOperation>

  <MetaAttribute name="maxValue"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:07_00008"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00032"
   baseName="maxValue" changeability="frozen" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="true" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="0"
   scope="instance_level" visibility="public_vis">
    <documentation>Maximum value for points containing meaningful data, corresponding to the acquisition time in a normal FID. NB calculated from numPointsValid, the number of usable points, *not* from numPoints, the total number of points. By definition maxValue - firstValue = (numPointsValid - 1) * valuePerPoint</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00031</valueType>
  </MetaAttribute>

  <MetaAttribute name="negateImaginary"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:07_00016"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00032"
   baseName="negateImaginary" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>Default is 'False'. If true the imaginary part of complex numbers should be negated before further processing. </documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00028</valueType>
    <defaultValue>
      <item>false</item>
    </defaultValue>
  </MetaAttribute>

  <MetaAttribute name="numPointsValid"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:07_00009"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00032"
   baseName="numPointsValid" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>Number of points containing valid data. Assumed to start at point one. Must be smaller or equal than numPoints. To account for experiments stopped early or that otherwise have not filled all storage slots with valid data. The valid data points will be those from pointOffset+1 to pointOffset+numPointsValid (inclusive).</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00011</valueType>
  </MetaAttribute>

  <MetaAttribute name="oversamplingInfo"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:07_00014"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00032"
   baseName="oversamplingInfo" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>Text field describing oversampling of data, if any.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00036</valueType>
  </MetaAttribute>

  <MetaAttribute name="phase0"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:07_00011"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00032"
   baseName="phase0" changeability="changeable" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="0"
   scope="instance_level" visibility="public_vis">
    <documentation>(Approximate) zero order phase correction in degrees to be applied after Fourier transformation</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00031</valueType>
  </MetaAttribute>

  <MetaAttribute name="phase1"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:07_00012"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00032"
   baseName="phase1" changeability="changeable" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="0"
   scope="instance_level" visibility="public_vis">
    <documentation>(Approximate) first order phase correction in degrees to be applied after Fourier transformation. By definition the point of no effect of the first order correction is point number one (before removal of points). </documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00031</valueType>
  </MetaAttribute>

  <MetaAttribute name="pointOffset"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:07_00010"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00032"
   baseName="pointOffset" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>Number of points at beginning of FID to ignore. Default zero. The first point with valid data will always be point 1 + pointOffset</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00032</valueType>
    <defaultValue>
      <item>0</item>
    </defaultValue>
  </MetaAttribute>

  <MetaAttribute name="spectralWidth"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:07_00013"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00032"
   baseName="spectralWidth" changeability="frozen" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="true" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="0"
   scope="instance_level" visibility="public_vis">
    <documentation>Spectral width after Fourier transformation. Unit is the reciprocal of the unit used for the value (e.g. Hz for values in seconds). For complex points defined as 1.0/valuePerPoint. For real points defined as 0.5/valuePerPoint.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00031</valueType>
  </MetaAttribute>

  <MetaAttribute name="valuePerPoint"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:07_00007"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00032"
   baseName="valuePerPoint" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>Value per point. Corresponds to the difference between successive time (e.g.) values whether or not the points are complex.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00031</valueType>
  </MetaAttribute>
</MetaClass>

