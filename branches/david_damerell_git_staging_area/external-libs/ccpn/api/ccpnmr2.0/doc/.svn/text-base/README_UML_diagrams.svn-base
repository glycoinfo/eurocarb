------------------------------------------------------------
-- GUIDE TO SET UP THE UML DIAGRAM DOCUMENTATION
------------------------------------------------------------

- Directory organisation

model/doc/
  README
  html/ : Object Domain auto generated html documentation
  |
  + diagram/
    |
    + *.gif : all the gif diagrams generated by Object Domain

------------------------------------------------------------
-- PROCEDURE
------------------------------------------------------------

Preparing the diagrams:

All class diagrams should be present in two versions: One without
attributes or operations shown, and another with. The latter should have
'-details' appended to its name.

All diagram names should start with '_' to avoid name clashes.

All packages should have a pair of diagrams (normal and '-details') with
the same name as the package.

To make sure diagrams are up to date, look at all of them.
- Check if cardinality markers look out  of place.
- Check if classes are missing in the Memops.Project diagram
- Consider if classes or links present in the -details diagrams may be
  missing in overview diagrams (it is recommended to compare the number
  and color of boxes in the two diagrams).
- Do 'Diagram->Reveal Relationships to make sure no links are missing 


Producing the files:

1/ Delete all files
    . rm -f model/doc/html/*/*.*
    . rm -f model/doc/html/*.*

2/ Update the cvs repository: (in model/doc/html)
    . cvs remove model/doc/html
    . cvs commit -m "Removed unneeded files" model/doc/html

3/ In Object Domain, generate the html documentation:
    . Select the package 'Logical'
    . Tools/Generate/HTML Documentation...
    . select the directory model/doc/html/

4/  . rm -f model/doc/html/*.*
    . rm -f model/doc/html/image/*.*


5/ Update the cvs repository: (in model/doc/html)
    . cvs add */*.*
    . cvs commit -m "Added the new version"

6/ Generate the Diag documentation
    . python python/memops/script/makeDiagDoc.py



