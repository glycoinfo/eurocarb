<?xml version='1.0'?>
<!--
#######################################################################

CCPN Data Model version 2.0.b2

Autogenerated by XmlModelIo revision 1.14.2.4 on ?
  from data model element memops.Implementation.MemopsRoot revision ?

#######################################################################
======================COPYRIGHT/LICENSE START==========================

MemopsRoot.xml: xmlmodel model for CCPN data model, MetaClass memops.Implementation.MemopsRoot

Copyright (C) 2007  (CCPN Project)

=======================================================================

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.
 
A copy of this license can be found in ../../../../license/LGPL.license
 
This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.
 
You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA


======================COPYRIGHT/LICENSE END============================

for further information, please contact :

- CCPN website (http://www.ccpn.ac.uk/)

- email: ccpn@bioc.cam.ac.uk

=======================================================================

If you are using this software for academic purposes, we suggest
quoting the following references:

===========================REFERENCE START=============================
Rasmus H. Fogh, Wayne Boucher, Wim F. Vranken, Anne
Pajon, Tim J. Stevens, T.N. Bhat, John Westbrook, John M.C. Ionides and
Ernest D. Laue (2005). A framework for scientific data modeling and automated
software development. Bioinformatics 21, 1678-1684.


This file was generated with the Memops software generation framework,
and contains original contributions embedded in the framework

===========================REFERENCE END===============================
-->

<MetaClass name="MemopsRoot"
 guid="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00047"
 container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00025"
 isAbstract="false" isImplicit="false" isLeaf="false" isRoot="false"
 isSingleton="false" partitionsChildren="true" visibility="public_vis">
  <documentation>Unique root class, located at the top of the parent-child tree of objects. The  attributes adn operations are different in the File and Db Implementations</documentation>
  <supertypes>
    <item>www.ccpn.ac.uk_Fogh_2006-12-15-19:00:39_00001</item>
    <item>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00048</item>
    <item>www.ccpn.ac.uk_Fogh_2006-09-14-16:28:57_00008</item>
    <item>www.ccpn.ac.uk_Fogh_2006-09-14-16:28:57_00007</item>
  </supertypes>
  <taggedValues>
    <item tag="repositoryId">$Id: MemopsRoot.xml,v 1.57.2.10 2009/03/11 17:22:02 rhfogh Exp $</item>
    <item tag="repositoryTag">$Name: release_2_0_8_3 $</item>
  </taggedValues>

  <!-- Start constraints for <MetaClass: memops.Implementation.MemopsRoot>: -->
  <MetaConstraint name="must_have_default_packageLocator"
   guid="www.ccpn.ac.uk_Fogh_2007-04-23-15:11:22_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00047"
   isImplicit="false">
    <codeStubs>
      <item tag="java">findFirstPackageLocator("targetName", "any") != null</item>
      <item tag="python">self.findFirstPackageLocator(targetName='any') is not None</item>
    </codeStubs>
  </MetaConstraint>
  <!-- End constraints for <MetaClass: memops.Implementation.MemopsRoot>: -->


  <MetaAttribute name="currentUserId"
   guid="www.ccpn.ac.uk_Fogh_2006-12-31-09:03:01_00011"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00047"
   baseName="currentUserId" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>user Id for current user. Used for access control, record of who creates and modifies objects, etc.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00037</valueType>
    <defaultValue>
      <item>user</item>
    </defaultValue>

    <!-- Start constraints for <MetaAttribute: memops.Implementation.MemopsRoot.currentUserId>: -->
    <MetaConstraint name="value_is_alphanumeric"
     guid="www.ccpn.ac.uk_Fogh_2007-12-14-18:11:38_00001"
     container="www.ccpn.ac.uk_Fogh_2006-12-31-09:03:01_00011"
     isImplicit="false">
      <codeStubs>
        <item tag="java">true /* NBNB TBD */</item>
        <item tag="python">value.isalnum()</item>
      </codeStubs>
    </MetaConstraint>
    <!-- End constraints for <MetaAttribute: memops.Implementation.MemopsRoot.currentUserId>: -->
  </MetaAttribute>

  <MetaOperation name="getPackageLocator"
   guid="www.ccpn.ac.uk_Fogh_2007-04-24-13:22:35_00002"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00047"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived link packageLocator</documentation>
    <target>www.ccpn.ac.uk_Fogh_2007-04-24-13:22:35_00001</target>
    <codeStubs>
      <item tag="java">result = findFirstPackageLocator("targetName", getPackageName());
if (result == null)
  result = findFirstPackageLocator("targetName", "any");</item>
      <item tag="python">ff = self.findFirstPackageLocator
result = ff(targetName=self.packageName) or ff(targetName='any')</item>
    </codeStubs>
  </MetaOperation>

  <MetaAttribute name="name"
   guid="www.ccpn.ac.uk_Fogh_2006-10-26-12:22:46_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00047"
   baseName="name" changeability="frozen" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="1"
   scope="instance_level" visibility="public_vis">
    <documentation>Memops root name - used in naming files etc</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00037</valueType>
    <defaultValue>
      <item>ccpProject</item>
    </defaultValue>

    <!-- Start constraints for <MetaAttribute: memops.Implementation.MemopsRoot.name>: -->
    <MetaConstraint name="value_is_alphanumeric_or_underscore"
     guid="www.ccpn.ac.uk_Fogh_2007-11-29-16:15:10_00001"
     container="www.ccpn.ac.uk_Fogh_2006-10-26-12:22:46_00001"
     isImplicit="false">
      <codeStubs>
        <item tag="java">value.matches("^[_a-zA-Z0-9]*$")</item>
        <item tag="python">isValid = value.isalnum()  # superfluous but faster in most cases
if not isValid:
  for cc in value:
    if cc != '_' and not cc.isalnum():
      isValid = False
      break
  else:
    isValid = True
</item>
      </codeStubs>
    </MetaConstraint>
    <!-- End constraints for <MetaAttribute: memops.Implementation.MemopsRoot.name>: -->
  </MetaAttribute>

  <MetaOperation name="newGuid"
   guid="www.ccpn.ac.uk_Fogh_2007-02-02-11:21:42_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00047"
   isAbstract="false" isImplicit="false" isQuery="false" opType="other"
   scope="instance_level" visibility="public_vis">
    <documentation>get new globally unique identifier</documentation>
    <target>www.ccpn.ac.uk_Fogh_2007-02-02-11:21:42_00001</target>
    <codeStubs>
      <item tag="java">java.lang.String sep = "-";
java.util.Calendar calendar = java.util.Calendar.getInstance();
java.lang.String timeStamp = java.lang.String.format("%02d%s%02d%s%02d%s%02d%s%02d%s%02d%s%03d",
                    calendar.get(java.util.Calendar.YEAR), sep,
                    calendar.get(java.util.Calendar.MONTH), sep,
                    calendar.get(java.util.Calendar.DAY_OF_MONTH), sep,
                    calendar.get(java.util.Calendar.HOUR_OF_DAY), sep,
                    calendar.get(java.util.Calendar.MINUTE), sep,
                    calendar.get(java.util.Calendar.SECOND), sep,
                    calendar.get(java.util.Calendar.MILLISECOND));

java.lang.Integer serial;
if (timeStamp.equals(_lastTimeStamp))
{
  _lastTimeSerial = serial = _lastTimeSerial + 1;
}
else
{
  _lastTimeStamp = timeStamp;
  _lastTimeSerial = serial = 1;
}

java.lang.String sep2 = "_";
result = java.lang.String.format("%s%s%s%s%s%s%05d",
                    getName(), sep2,
                    getCurrentUserId(), sep2,
                    timeStamp, sep2,
                    serial);</item>
      <item tag="python"># NBNB HACK TBD
# This is a weak GUID generator - should be replaced with a proper one
# NB must be done by direct access

import time
dataDict = self.__dict__

tt = time.time()
timeStamp = ''.join((time.strftime("%Y-%m-%d-%H-%M-%S", time.localtime(tt)), '-',  ("%.3f" % (tt%1))[2:]))
if timeStamp == dataDict.get('_lastTimeStamp'):
  serial = dataDict.get('_lastTimeSerial',0) + 1
  dataDict['_lastTimeSerial'] = serial
else:
  dataDict['_lastTimeStamp'] = timeStamp
  serial = dataDict['_lastTimeSerial'] = 1
      
result =  "%s_%s_%s_%05d" % (dataDict['name'], dataDict['currentUserId'], 
                               timeStamp, serial)</item>
    </codeStubs>


    <MetaParameter name="result"
     guid="www.ccpn.ac.uk_Fogh_2007-02-02-11:21:42_00002"
     container="www.ccpn.ac.uk_Fogh_2007-02-02-11:21:42_00001"
     direction="return_dir" hicard="1" isImplicit="false" isOrdered="false"
     isUnique="true" locard="1">
      <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00033</valueType>
    </MetaParameter>
  </MetaOperation>

  <MetaAttribute name="override"
   guid="www.ccpn.ac.uk_Fogh_2006-09-29-18:30:36_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00047"
   baseName="override" changeability="changeable" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="1"
   scope="instance_level" visibility="public_vis">
    <documentation>Override switch - switches off validity and constraint checking. NB anyone setting override takes reponsibility for unsetting it again and ensuring that the final result is valid. It is strongly recommended to check the validity of any changes afterwards. NBNB TBD we need to prevent the storing of override=True data somehow.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00028</valueType>
    <defaultValue>
      <item>false</item>
    </defaultValue>
  </MetaAttribute>

  <MetaRole name="packageLocator"
   guid="www.ccpn.ac.uk_Fogh_2007-04-24-13:22:35_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00047"
   baseName="packageLocator" changeability="frozen" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="true"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>Package locator relevant for MemopsRoot</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-09-14-16:28:57_00003</valueType>
  </MetaRole>

  <MetaRole name="packageLocators"
   guid="www.ccpn.ac.uk_Fogh_2006-09-20-10:48:39_00002"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00047"
   baseName="packageLocator" changeability="changeable" hicard="-1"
   hierarchy="child" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <otherRole>www.ccpn.ac.uk_Fogh_2006-09-20-10:48:39_00001</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-09-14-16:28:57_00003</valueType>
  </MetaRole>

  <MetaRole name="repositories"
   guid="www.ccpn.ac.uk_Fogh_2006-09-20-10:48:39_00004"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00047"
   baseName="repository" changeability="changeable" hicard="-1"
   hierarchy="child" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <otherRole>www.ccpn.ac.uk_Fogh_2006-09-20-10:48:39_00003</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-09-14-16:28:57_00004</valueType>
  </MetaRole>
</MetaClass>

