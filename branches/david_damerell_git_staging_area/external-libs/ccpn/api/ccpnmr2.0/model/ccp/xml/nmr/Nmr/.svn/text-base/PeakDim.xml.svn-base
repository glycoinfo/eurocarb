<?xml version='1.0'?>
<!--
#######################################################################

CCPN Data Model version 2.0.b2

Autogenerated by XmlModelIo revision 1.14.2.4 on ?
  from data model element ccp.nmr.Nmr.PeakDim revision ?

#######################################################################
======================COPYRIGHT/LICENSE START==========================

PeakDim.xml: xmlmodel model for CCPN data model, MetaClass ccp.nmr.Nmr.PeakDim

Copyright (C) 2007 Rasmus Fogh (CCPN Project)

=======================================================================

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.
 
A copy of this license can be found in ../../../../../license/LGPL.license
 
This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.
 
You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA


======================COPYRIGHT/LICENSE END============================

for further information, please contact :

- CCPN website (http://www.ccpn.ac.uk/)

- email: ccpn@bioc.cam.ac.uk

=======================================================================

If you are using this software for academic purposes, we suggest
quoting the following references:

===========================REFERENCE START=============================
Wim F. Vranken, Wayne Boucher, Tim J. Stevens, Rasmus
H. Fogh, Anne Pajon, Miguel Llinas, Eldon L. Ulrich, John L. Markley, John
Ionides and Ernest D. Laue (2005). The CCPN Data Model for NMR Spectroscopy:
Development of a Software Pipeline. Proteins 59, 687 - 696.

Rasmus H. Fogh, Wayne Boucher, Wim F. Vranken, Anne
Pajon, Tim J. Stevens, T.N. Bhat, John Westbrook, John M.C. Ionides and
Ernest D. Laue (2005). A framework for scientific data modeling and automated
software development. Bioinformatics 21, 1678-1684.


This file was generated with the Memops software generation framework,
and contains original contributions embedded in the framework

===========================REFERENCE END===============================
-->

<MetaClass name="PeakDim"
 guid="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
 container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00006"
 isAbstract="false" isImplicit="false" isLeaf="false" isRoot="false"
 isSingleton="false" partitionsChildren="false" visibility="public_vis">
  <documentation>Crosspeak dimension
Note: There is no attribute 'linewidth', as the term is too ambiguous in practical use to allow a clear definition. Various aspects of line widths are covered by positionError, boxWidth, and decayRate.</documentation>
  <keyNames>
    <item>dim</item>
  </keyNames>
  <supertypes>
    <item>www.ccpn.ac.uk_Fogh_2006-09-14-16:28:57_00005</item>
  </supertypes>
  <taggedValues>
    <item tag="repositoryId">$Id: PeakDim.xml,v 1.51.2.9 2009/03/11 17:20:25 rhfogh Exp $</item>
    <item tag="repositoryTag">$Name: release_2_0_8_3 $</item>
  </taggedValues>


  <MetaAttribute name="annotation"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:00_00013"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   baseName="annotation" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>Descriptive text string, designed for annotation of Xpks on graphics displays. Long annotations should be avoided.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00033</valueType>
  </MetaAttribute>

  <MetaAttribute name="boxWidth"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00005"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   baseName="boxWidth" changeability="changeable" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="0"
   scope="instance_level" visibility="public_vis">
    <documentation>The full width of the peak footprint in points, i.e. the width of the area that should be considered for integration, fitting, etc. It is not a very precise definition, but this is an input parameter rather than an output parameter.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00031</valueType>
  </MetaAttribute>

  <MetaRole name="dataDerivations"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:19:57_00033"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   baseName="dataDerivation" changeability="changeable" hicard="-1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>DataDerivations calculated using PeakDim</documentation>
    <otherRole>www.ccpn.ac.uk_Fogh_2006-08-16-18:19:57_00034</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00007</valueType>
  </MetaRole>

  <MetaRole name="dataDim"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:00_00009"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   baseName="dataDim" changeability="frozen" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="true" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="1"
   noDeleteIfSet="false" partitionsChildren="false" scope="instance_level"
   visibility="public_vis">
    <documentation>DataDim corresponding to PeakDim</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00008</valueType>
  </MetaRole>

  <MetaRole name="dataDimRef"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:00_00010"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   baseName="dataDimRef" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>DataDimRef relevant to PeakDim - As there may be several alternative dataDimRefs for a given dimension, assigning this link may involve a measure of assignment.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00019</valueType>
  </MetaRole>

  <MetaAttribute name="decayRate"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00008"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   baseName="decayRate" changeability="changeable" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="0"
   scope="instance_level" visibility="public_vis">
    <documentation>Fitted decay rate in the time domain (raw-data domain). If the raw data domain unit is seconds, the unit of decayRate is Hz. If an exponential decay is fitted to the function exp(-piRt), the decayrate is R. For a true Lorenzian decayRate is equal to the full-width-half-height.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00031</valueType>
  </MetaAttribute>

  <MetaAttribute name="decayRateError"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00009"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   baseName="decayRateError" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>Uncertainty (standard deviation) of peak decayRate.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00031</valueType>
  </MetaAttribute>

  <MetaAttribute name="dim"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:00_00011"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   baseName="dim" changeability="frozen" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="1"
   scope="instance_level" visibility="public_vis">
    <documentation>Dimension number, from 1 to nuber of dimensions - used as key to get the corresponding DataDim</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00001</valueType>

    <!-- Start constraints for <MetaAttribute: ccp.nmr.Nmr.PeakDim.dim>: -->
    <MetaConstraint name="value_le_dataSource_numDim"
     guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:00_00012"
     container="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:00_00011"
     isImplicit="false">
      <codeStubs>
        <item tag="java">value &lt;= getPeak().getPeakList().getDataSource().getNumDim()</item>
        <item tag="python">value &lt;= self.getByNavigation('peak', 'peakList', 'dataSource', 'numDim')</item>
      </codeStubs>
    </MetaConstraint>
    <!-- End constraints for <MetaAttribute: ccp.nmr.Nmr.PeakDim.dim>: -->
  </MetaAttribute>

  <MetaOperation name="getDataDim"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00013"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>get function for derived link dataDim</documentation>
    <target>www.ccpn.ac.uk_Fogh_2006-08-16-18:20:00_00009</target>
    <codeStubs>
      <item tag="java">result = getPeak().getPeakList().getDataSource().findFirstDataDim("dim", getDim());</item>
      <item tag="python">result = self.getByNavigation('peak', 'peakList', 'dataSource',('dataDims', self.dim))</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="getMainPeakDimContribs"
   guid="www.ccpn.ac.uk_Fogh_2006-10-25-11:32:26_00002"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived link mainPeakDimContribs</documentation>
    <target>www.ccpn.ac.uk_Fogh_2006-10-25-11:32:21_00001</target>
    <codeStubs>
      <item tag="java">result = findAllPeakDimContribs("peakDimComponent", null);</item>
      <item tag="python">result =  frozenset(self.findAllPeakDimContribs(peakDimComponent=None))</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="getRealValue"
   guid="www.ccpn.ac.uk_Fogh_2006-10-25-11:32:26_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>special getter for ('semi-derived') attribute realValue</documentation>
    <target>www.ccpn.ac.uk_Fogh_2006-10-25-11:32:25_00001</target>
    <codeStubs>
      <item tag="java">// NBNB requires direct access
result = _realValue;
if ((result == null) &amp;&amp; (getPeakDimComponents().size() == 0))
  result = getValue();</item>
      <item tag="python"># NBNB requires direct access
# NBNB TBD needs remodeling - not stable under save/load
result = dataDict['realValue']
if result is None and not self.peakDimComponents:
  try:
    result = self.value
  except:
    result = None</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="getValue"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00015"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived attribute value.</documentation>
    <target>www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00010</target>
    <codeStubs>
      <item tag="java">result = null;
java.lang.Float pp = getPosition();
if (pp != null) {
  ccp.api.nmr.Nmr.DataDimRef dataDimRef = getDataDimRef();
  ccp.api.nmr.Nmr.AbstractDataDim dataDim;

  if (dataDimRef == null) {
    dataDim = getDataDim();
    java.util.List&lt;ccp.api.nmr.Nmr.ExpDimRef&gt; ll = new java.util.ArrayList&lt;ccp.api.nmr.Nmr.ExpDimRef&gt;();
    for (ccp.api.nmr.Nmr.DimensionScaling ds: dataDim.getDimensionScalings()) {
      java.util.Collection sfs = ds.getScalingFactors();
      if (sfs.isEmpty() || sfs.contains(1.0f))
        ll.add(ds.getExpDimRef());
    }
    if (ll.size() == 1)
      dataDimRef = ll.get(0).findFirstDataDimRef("dataDim", dataDim);
  } else {
    dataDim = dataDimRef.getDataDim();
  }

  if (dataDimRef != null) {
    java.lang.Integer na = getNumAliasing();
    if ((na != null) &amp;&amp; (na != 0))
      pp += na * ((ccp.api.nmr.Nmr.FreqDataDim) dataDim).getNumPointsOrig();
      
    result = dataDimRef.pointToValue(pp);
  }
}</item>
      <item tag="python">result = None
pp = self.position
if pp is not None:
  dataDimRef = self.dataDimRef

  if dataDimRef is None:
    dataDim = self.dataDim
    ll = []
    for ds in dataDim.dimensionScalings:
      sfs = ds.scalingFactors
      if not sfs or 1 in sfs:
        ll.append(ds.expDimRef)
    if len(ll) == 1:
      dataDimRef = ll[0].findFirstDataDimRef(dataDim=dataDim)
      
  else:
    dataDim = dataDimRef.dataDim


  if dataDimRef is not None:

    if self.numAliasing:
      # The dataDim can only be a FreqDataDim, so numPointsOrig is always defined
      pp = pp + self.numAliasing * dataDim.numPointsOrig

    result = dataDimRef.pointToValue(pp)</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="getValueError"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00019"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived attribute valueError</documentation>
    <target>www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00011</target>
    <codeStubs>
      <item tag="java">result = null;
java.lang.Float pp = getPositionError();
if (pp != null) {
  ccp.api.nmr.Nmr.DataDimRef dataDimRef = getDataDimRef();
  ccp.api.nmr.Nmr.AbstractDataDim dataDim;

  if (dataDimRef == null) {
    dataDim = getDataDim();
    java.util.List&lt;ccp.api.nmr.Nmr.ExpDimRef&gt; ll = new java.util.ArrayList&lt;ccp.api.nmr.Nmr.ExpDimRef&gt;();
    for (ccp.api.nmr.Nmr.DimensionScaling ds: dataDim.getDimensionScalings()) {
      java.util.Collection sfs = ds.getScalingFactors();
      if (sfs.isEmpty() || sfs.contains(1.0f))
        ll.add(ds.getExpDimRef());
    }
    if (ll.size() == 1)
      dataDimRef = ll.get(0).findFirstDataDimRef("dataDim", dataDim);
  } 

  if (dataDimRef != null) {
    result = pp * dataDimRef.getValuePerPoint();
  }
}</item>
      <item tag="python">result = None
pp = self.positionError
if pp is not None:
  dataDimRef = self.dataDimRef

  if dataDimRef is None:
    dataDim = self.dataDim
    ll = []
    for ds in dataDim.dimensionScalings:
      sfs = ds.scalingFactors
      if not sfs or 1 in sfs:
        ll.append(ds.expDimRef)
    if len(ll) == 1:
      dataDimRef = ll[0].findFirstDataDimRef(dataDim=dataDim)

  if dataDimRef is not None:
    result = pp * dataDimRef.valuePerPoint</item>
    </codeStubs>
  </MetaOperation>

  <MetaAttribute name="lineWidth"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00012"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   baseName="lineWidth" changeability="changeable" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="0"
   scope="instance_level" visibility="public_vis">
    <documentation>Full-width-half-height of peak/multiplet in this dimension. Unit is DataDimRef.unit (typically Hz). Do NOT use this attribute if your data are better described by one of the alternatives :
positionError - standard deviation of measured position
boxWidth - footprint width of peak for integration limits etc.
decayRate - fitted decay rate (in Hz)</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00031</valueType>
  </MetaAttribute>

  <MetaRole name="mainPeakDimContribs"
   guid="www.ccpn.ac.uk_Fogh_2006-10-25-11:32:21_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   baseName="mainPeakDimContrib" changeability="frozen" hicard="-1"
   isAbstract="false" isAutomatic="false" isDerived="true"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>AbstractPeakDimContribs that refer to the main assignment component of the peakDim, rather than to any explicit PeakDimComponent.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00020</valueType>
  </MetaRole>

  <MetaRole name="measurements"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:19:58_00011"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   baseName="measurement" changeability="changeable" hicard="-1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>Measurements deriving from PeakDim.</documentation>
    <otherRole>www.ccpn.ac.uk_Fogh_2006-08-16-18:19:58_00012</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00009</valueType>
  </MetaRole>

  <MetaAttribute name="numAliasing"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:00_00014"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   baseName="numAliasing" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>number of aliasings. The real peak position is defined as positionPoints + numAliasing*dataDimRef.dataDim.numPointsOri</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00032</valueType>
    <defaultValue>
      <item>0</item>
    </defaultValue>

    <!-- Start constraints for <MetaAttribute: ccp.nmr.Nmr.PeakDim.numAliasing>: -->
    <MetaConstraint name="numAliasing_requires_link_to_FreqDataDim"
     guid="www.ccpn.ac.uk_Fogh_2007-01-18-18:24:56_00001"
     container="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:00_00014"
     isImplicit="false">
      <codeStubs>
        <item tag="java">(value != 0) || getDataDim().getClassName().equals("FreqDataDim")</item>
        <item tag="python">not value or isinstance(self.getByNavigation('peak', 'peakList', 'dataSource', ('dataDims', self.dim)), FreqDataDim)</item>
      </codeStubs>
    </MetaConstraint>
    <!-- End constraints for <MetaAttribute: ccp.nmr.Nmr.PeakDim.numAliasing>: -->
  </MetaAttribute>

  <MetaRole name="peak"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:00_00002"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   aggregation="composite" baseName="peak" changeability="frozen" hicard="1"
   hierarchy="parent" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <otherRole>www.ccpn.ac.uk_Fogh_2006-08-16-18:20:00_00003</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00011</valueType>
  </MetaRole>

  <MetaRole name="peakDimComponents"
   guid="www.ccpn.ac.uk_Fogh_2006-10-25-11:29:45_00008"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   baseName="peakDimComponent" changeability="changeable" hicard="-1"
   hierarchy="child" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <otherRole>www.ccpn.ac.uk_Fogh_2006-10-25-11:29:45_00007</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-10-25-11:29:42_00001</valueType>
  </MetaRole>

  <MetaRole name="peakDimContribs"
   guid="www.ccpn.ac.uk_Fogh_2006-10-25-11:29:45_00006"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   baseName="peakDimContrib" changeability="changeable" hicard="-1"
   hierarchy="child" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <otherRole>www.ccpn.ac.uk_Fogh_2006-10-25-11:29:45_00005</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:47_00020</valueType>
  </MetaRole>

  <MetaAttribute name="phase"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00006"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   baseName="phase" changeability="changeable" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="0"
   scope="instance_level" visibility="public_vis">
    <documentation>Phase (in degrees) of peak</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00031</valueType>
  </MetaAttribute>

  <MetaAttribute name="phaseError"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00007"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   baseName="phaseError" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>Uncertasinty (standard deviation) of peak phase.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00031</valueType>
  </MetaAttribute>

  <MetaAttribute name="position"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   baseName="position" changeability="changeable" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="0"
   scope="instance_level" visibility="public_vis">
    <documentation>Peak position  in *point numbers*. Positions must be between 1.0 and npoints+1. The peak position in the appropriate unit (typically ppm), is given in the derived attribute 'value'.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00031</valueType>

    <!-- Start constraints for <MetaAttribute: ccp.nmr.Nmr.PeakDim.position>: -->
    <MetaConstraint name="position_ge_1"
     guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00002"
     container="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00001"
     isImplicit="false">
      <codeStubs>
        <item tag="java">value &gt;= 1.0f</item>
        <item tag="python">value &gt;= 1.0</item>
      </codeStubs>
    </MetaConstraint>
    <MetaConstraint name="position_lt_dataDim_numPoints_plus_one"
     guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00003"
     container="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00001"
     isImplicit="false">
      <codeStubs>
        <item tag="java">value &lt;= getPeak().getPeakList().getDataSource().findFirstDataDim("dim", getDim()).getNumPoints() + 1.0f</item>
        <item tag="python">value &lt; self.getByNavigation('peak', 'peakList', 'dataSource', ('dataDims', self.dim), 'numPoints') +  1.0</item>
      </codeStubs>
    </MetaConstraint>
    <!-- End constraints for <MetaAttribute: ccp.nmr.Nmr.PeakDim.position>: -->
  </MetaAttribute>

  <MetaAttribute name="positionError"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00004"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   baseName="positionError" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>Uncertainty (standard deviation) of peak position (in point numbers).</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00031</valueType>
  </MetaAttribute>

  <MetaAttribute name="realValue"
   guid="www.ccpn.ac.uk_Fogh_2006-10-25-11:32:25_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   baseName="realValue" changeability="changeable" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="0"
   scope="instance_level" visibility="public_vis">
    <documentation>Peak position in units of ExpDimRef.unit, corresponding to the main DataDimRef.Semi-derived value, as it were. Can be set explicitly (case 1). If not set explicitly and there are no PeakDimComponents (case 2) self.value is automatically returned. If not set and there are PeakDimComponents, None is returned. Peak.realValue always gives the best value for the quantity described in the main DataDimRef. The organisation of this parameter lets you store values for the central chemical shift of multiplets (e.g. DQF-COSY), while you still get the peak value in the simple case.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00031</valueType>
  </MetaAttribute>

  <MetaOperation name="setValue"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00017"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   isAbstract="false" isImplicit="false" isQuery="false" opType="set"
   scope="instance_level" visibility="public_vis">
    <documentation>setter for derived attribute value</documentation>
    <target>www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00010</target>
    <codeStubs>
      <item tag="java">ccp.api.nmr.Nmr.DataDimRef dataDimRef = getDataDimRef();
ccp.api.nmr.Nmr.AbstractDataDim dataDim;


if (dataDimRef == null) {
  dataDim = getDataDim();
  java.util.List&lt;ccp.api.nmr.Nmr.ExpDimRef&gt; ll = new java.util.ArrayList&lt;ccp.api.nmr.Nmr.ExpDimRef&gt;();
  for (ccp.api.nmr.Nmr.DimensionScaling ds: dataDim.getDimensionScalings()) {
    java.util.Collection sfs = ds.getScalingFactors();
    if (sfs.isEmpty() || sfs.contains(1.0f))
      ll.add(ds.getExpDimRef());
  }
  if (ll.size() == 1)
    dataDimRef = ll.get(0).findFirstDataDimRef("dataDim", dataDim);
  else
    throw new memops.general.ApiException("Peak " + getPeak().getSerial() + " dim " + getDim() + " has no unambiguous dataDimRef" );
  
} else {
  dataDim = dataDimRef.getDataDim();
}

float pp = dataDimRef.valueToPoint(value).floatValue() - 1;
int numPointsOrig = ((ccp.api.nmr.Nmr.FreqDataDim) dataDim).getNumPointsOrig();
int nn = (int) pp / numPointsOrig;
pp = pp % numPointsOrig;
if (nn &lt; 0 || pp &lt; 0)
{
  nn--;
  pp += numPointsOrig;
}
pp += 1.0f;
setNumAliasing(nn);
setPosition(pp);</item>
      <item tag="python">dataDimRef = self.dataDimRef

if dataDimRef is None:
  dataDim = self.dataDim
  ll = []
  for ds in dataDim.dimensionScalings:
    sfs = ds.scalingFactors
    if not sfs or 1 in sfs:
      ll.append(ds.expDimRef)
  if len(ll) == 1:
    dataDimRef = ll[0].findFirstDataDimRef(dataDim=dataDim)

  if dataDimRef is None:
    raise ApiError("Peak %s dim %s has no unambiguous dataDimRef" %
     (self.peak.serial, self.dim)
    )
else:
  dataDim = dataDimRef.dataDim

pp = dataDimRef.valueToPoint(value)
# The dataDim below can only be a FreqDataDim, so numPointsOrig is always defined. 
(nn, pp) = divmod(pp-1, dataDim.numPointsOrig)

self.numAliasing = int(nn)
self.position = pp + 1.0</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="setValueError"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00021"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   isAbstract="false" isImplicit="false" isQuery="false" opType="set"
   scope="instance_level" visibility="public_vis">
    <documentation>setter for derived attribute valueError</documentation>
    <target>www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00011</target>
    <codeStubs>
      <item tag="java">ccp.api.nmr.Nmr.DataDimRef dataDimRef = getDataDimRef();

if (dataDimRef == null) {
   ccp.api.nmr.Nmr.AbstractDataDim dataDim = getDataDim();
  java.util.List&lt;ccp.api.nmr.Nmr.ExpDimRef&gt; ll = new java.util.ArrayList&lt;ccp.api.nmr.Nmr.ExpDimRef&gt;();
  for (ccp.api.nmr.Nmr.DimensionScaling ds: dataDim.getDimensionScalings()) {
    java.util.Collection sfs = ds.getScalingFactors();
    if (sfs.isEmpty() || sfs.contains(1.0f))
      ll.add(ds.getExpDimRef());
  }
  if (ll.size() == 1)
    dataDimRef = ll.get(0).findFirstDataDimRef("dataDim", dataDim);
  else
    throw new memops.general.ApiException("Peak " + getPeak().getSerial() + " dim " + getDim() + " has no unique dataDimRef" );
  
}

_positionError = new java.lang.Float(value.floatValue()/dataDimRef.getValuePerPoint().floatValue());</item>
      <item tag="python">dataDimRef = self.dataDimRef
if dataDimRef is None:
  dataDim = self.dataDim
  ll = []
  for ds in dataDim.dimensionScalings:
    sfs = ds.scalingFactors
    if not sfs or 1 in sfs:
      ll.append(ds.expDimRef)
  if len(ll) == 1:
    dataDimRef = ll[0].findFirstDataDimRef(dataDim=dataDim)

  if dataDimRef is None:
    raise ApiError("Peak %s dim %s has no unique dataDimRef" %
     (self.peak.serial, self.dim)
    )

self.positionError = value/dataDimRef.valuePerPoint</item>
    </codeStubs>
  </MetaOperation>

  <MetaAttribute name="value"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00010"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   baseName="value" changeability="changeable" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="true" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="0"
   scope="instance_level" visibility="public_vis">
    <documentation>Real peak position in units of ExpDimRef.unit, after correcting for numAliasing, calculated using the directly linked (main component) DataDimRef. If the DataDimRef is ambiguous or absent, the value is None. If there are PeakDimComponents present the value you get will not reflect the measurement that corresponds to the dataDimRef. If you want either correct values or 'None', use realValue instead.

value can be set, provided there is one unique DataDimRef. The effect will be to update position and numAliasing to reflect the value.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00031</valueType>
  </MetaAttribute>

  <MetaAttribute name="valueError"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:20:01_00011"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:46_00013"
   baseName="valueError" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="true"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>Uncertainty (standard deviation) on value, in units of ExpDimRef.unit. Derived from positionError. Depends on the presence of one unambiguous DataDimRef, and returns None if no such is found. valueError can also be set if there is an unambiguous DataDimRef - the effect will be to update positionError.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00031</valueType>
  </MetaAttribute>
</MetaClass>

