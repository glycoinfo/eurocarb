<?xml version='1.0'?>
<!--
#######################################################################

CCPN Data Model version 2.0.b2

Autogenerated by XmlModelIo revision 1.14.2.4 on ?
  from data model element ccp.general.DataLocation.BlockedBinaryMatrix revision ?

#######################################################################
======================COPYRIGHT/LICENSE START==========================

BlockedBinaryMatrix.xml: xmlmodel model for CCPN data model, MetaClass ccp.general.DataLocation.BlockedBinaryMatrix

Copyright (C) 2007  (CCPN Project)

=======================================================================

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.
 
A copy of this license can be found in ../../../../../license/LGPL.license
 
This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.
 
You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA


======================COPYRIGHT/LICENSE END============================

for further information, please contact :

- CCPN website (http://www.ccpn.ac.uk/)

- email: ccpn@bioc.cam.ac.uk

=======================================================================

If you are using this software for academic purposes, we suggest
quoting the following references:

===========================REFERENCE START=============================
Rasmus H. Fogh, Wayne Boucher, Wim F. Vranken, Anne
Pajon, Tim J. Stevens, T.N. Bhat, John Westbrook, John M.C. Ionides and
Ernest D. Laue (2005). A framework for scientific data modeling and automated
software development. Bioinformatics 21, 1678-1684.


This file was generated with the Memops software generation framework,
and contains original contributions embedded in the framework

===========================REFERENCE END===============================
-->

<MetaClass name="BlockedBinaryMatrix"
 guid="www.ccpn.ac.uk_Fogh_2007-04-04-17:43:15_00004"
 container="www.ccpn.ac.uk_Fogh_2007-04-03-19:08:10_00001"
 isAbstract="false" isImplicit="false" isLeaf="false" isRoot="false"
 isSingleton="false" partitionsChildren="false" visibility="public_vis">
  <documentation>NumericMatrix stored in blocked binary format</documentation>
  <keyNames>
    <item>serial</item>
  </keyNames>
  <supertypes>
    <item>www.ccpn.ac.uk_Fogh_2007-04-04-17:43:15_00002</item>
  </supertypes>
  <taggedValues>
    <item tag="repositoryId">$Id: BlockedBinaryMatrix.xml,v 1.29.2.9 2009/03/11 17:19:31 rhfogh Exp $</item>
    <item tag="repositoryTag">$Name: release_2_0_8_3 $</item>
  </taggedValues>

  <!-- Start constraints for <MetaClass: ccp.general.DataLocation.BlockedBinaryMatrix>: -->
  <MetaConstraint name="blockSizes_same_length_as_numPoints"
   guid="www.ccpn.ac.uk_Fogh_2007-10-02-16:44:44_00002"
   container="www.ccpn.ac.uk_Fogh_2007-04-04-17:43:15_00004"
   isImplicit="false">
    <codeStubs>
      <item tag="java">getNumPoints().size() == getBlockSizes().size()</item>
      <item tag="python">len(self.numPoints) == len(self.blockSizes)</item>
    </codeStubs>
  </MetaConstraint>
  <!-- End constraints for <MetaClass: ccp.general.DataLocation.BlockedBinaryMatrix>: -->


  <MetaAttribute name="blockSizes"
   guid="www.ccpn.ac.uk_Fogh_2007-04-04-17:45:25_00002"
   container="www.ccpn.ac.uk_Fogh_2007-04-04-17:43:15_00004"
   baseName="blockSize" changeability="changeable" hicard="-1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="true" isUnique="false"
   locard="0" scope="instance_level" visibility="public_vis">
    <documentation>Block sizes in dimension order</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00032</valueType>
  </MetaAttribute>

  <MetaAttribute name="hasBlockPadding"
   guid="www.ccpn.ac.uk_Fogh_2007-04-04-17:46:36_00003"
   container="www.ccpn.ac.uk_Fogh_2007-04-04-17:43:15_00004"
   baseName="hasBlockPadding" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>Are data padded to fill all blocks completely? Alternatively incomplete blocks store only the actual data.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00028</valueType>
    <defaultValue>
      <item>true</item>
    </defaultValue>
  </MetaAttribute>

  <MetaAttribute name="headerSize"
   guid="www.ccpn.ac.uk_Fogh_2007-04-04-17:46:36_00004"
   container="www.ccpn.ac.uk_Fogh_2007-04-04-17:43:15_00004"
   baseName="headerSize" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>Header size in bytes</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00032</valueType>
    <defaultValue>
      <item>0</item>
    </defaultValue>
  </MetaAttribute>

  <MetaAttribute name="nByte"
   guid="www.ccpn.ac.uk_Fogh_2007-04-04-17:45:25_00001"
   container="www.ccpn.ac.uk_Fogh_2007-04-04-17:43:15_00004"
   baseName="nByte" changeability="changeable" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="1"
   scope="instance_level" visibility="public_vis">
    <documentation>Number of bytes per number</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00032</valueType>
    <defaultValue>
      <item>4</item>
    </defaultValue>
  </MetaAttribute>
</MetaClass>

