<?xml version='1.0'?>
<!--
#######################################################################

CCPN Data Model version 2.0.b2

Autogenerated by XmlModelIo revision 1.14.2.4 on ?
  from data model element ccp.molecule.Molecule.MolResidue revision ?

#######################################################################
======================COPYRIGHT/LICENSE START==========================

MolResidue.xml: xmlmodel model for CCPN data model, MetaClass ccp.molecule.Molecule.MolResidue

Copyright (C) 2007  (CCPN Project)

=======================================================================

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.
 
A copy of this license can be found in ../../../../../license/LGPL.license
 
This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.
 
You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA


======================COPYRIGHT/LICENSE END============================

for further information, please contact :

- CCPN website (http://www.ccpn.ac.uk/)

- email: ccpn@bioc.cam.ac.uk

=======================================================================

If you are using this software for academic purposes, we suggest
quoting the following references:

===========================REFERENCE START=============================
Rasmus H. Fogh, Wayne Boucher, Wim F. Vranken, Anne
Pajon, Tim J. Stevens, T.N. Bhat, John Westbrook, John M.C. Ionides and
Ernest D. Laue (2005). A framework for scientific data modeling and automated
software development. Bioinformatics 21, 1678-1684.


This file was generated with the Memops software generation framework,
and contains original contributions embedded in the framework

===========================REFERENCE END===============================
-->

<MetaClass name="MolResidue"
 guid="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00044"
 container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00038"
 isAbstract="false" isImplicit="false" isLeaf="false" isRoot="false"
 isSingleton="false" partitionsChildren="false" visibility="public_vis">
  <documentation>Monomer/Residue belonging to a Molecule, e.g. in the sequence for Insulin A-chain as such, as opposed to a specific Insulin A-chain molecule with coordinates.

Note that MolResidues can neither be created nor deleted while their parent Molecule is linked to one or more chains. When creating a Molecule all relevant MolResLinkEnds are created automatically.
Note also that MolResidues can not be deleted, except as a consequence of deleting their molecule.

It is guaranteed that the serials of molResidues form a continuous range, and that all linear polymer type links are between MolResidues with consecutive serials. The Molesidue.serials must start at one. This constraint is not checked (for technical reasons), but it can only be broken if someone has modified the data bypassing the API.</documentation>
  <keyNames>
    <item>serial</item>
  </keyNames>
  <supertypes>
    <item>www.ccpn.ac.uk_Fogh_2006-09-14-16:28:57_00005</item>
  </supertypes>
  <constructorCodeStubs>
    <item tag="java">if (getMolecule().getIsFinalised())
  throw new memops.general.ApiException("MolResidues may not be added once Molecule has been finalised");

for (ccp.api.molecule.ChemComp.AbstractChemAtom ca: getChemCompVar().getChemAtoms()) {
  if (ca instanceof ccp.api.molecule.ChemComp.LinkAtom) {
    ccp.api.molecule.ChemComp.LinkEnd le = ((ccp.api.molecule.ChemComp.LinkAtom)ca).getBoundLinkEnd();
    if (le != null)
      newMolResLinkEnd(le.getLinkCode());
  }
}</item>
    <item tag="python">if self.molecule.isFinalised:
  raise ApiError("MolResidues may not be added once Molecule has been finalised")

for ca in self.chemCompVar.chemAtoms:
  if isinstance(ca,ccp.api.molecule.ChemComp.LinkAtom):
    linkEnd = ca.boundLinkEnd
    if linkEnd is not None:
      MolResLinkEnd(self, linkCode=linkEnd.linkCode)</item>
  </constructorCodeStubs>
  <destructorCodeStubs>
    <item tag="java">ccp.api.molecule.Molecule.Molecule molecule = getMolecule();
if (molecule.getChains().size() &gt; 0 || molecule.getIsFinalised().booleanValue())
  throw new memops.general.ApiException("MolResidue of " + molecule.getName() + " cannot be deleted if molecule is finalised or has chains");

// The following code interacts directly with the deletion implementation (use of 'nowDeleted'). 
// This is bad, but the only way to accomplish the desired result.
if (!objsToBeDeleted.contains(molecule) &amp;&amp; !getRoot().getOverride())
    throw new memops.general.ApiException("MolResidue " + getFullKey() + ": MolResidues can only be deleted when the Molecule is deleted.");</item>
    <item tag="python"># The following code interacts directly with the deletion implementation (use of 'objsToBeDeleted'). 
# This is bad, but the only way to accomplish the desired result.
if self.molecule not in objsToBeDeleted and not self.root.override:
  raise ApiError("MolResidue %s: MolResidues can only be deleted when the Molecule is deleted." % self)</item>
  </destructorCodeStubs>
  <taggedValues>
    <item tag="repositoryId">$Id: MolResidue.xml,v 1.44.2.9 2009/03/11 17:20:08 rhfogh Exp $</item>
    <item tag="repositoryTag">$Name: release_2_0_8_3 $</item>
  </taggedValues>


  <MetaAttribute name="ccpCode"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00015"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00044"
   baseName="ccpCode" changeability="frozen" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="true" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="1"
   scope="instance_level" visibility="public_vis">
    <documentation>ccpCode of ChemComp corresponding to MolResidue</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2007-09-12-18:31:28_00003</valueType>
  </MetaAttribute>

  <MetaRole name="chemComp"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00010"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00044"
   baseName="chemComp" changeability="frozen" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="1"
   noDeleteIfSet="false" partitionsChildren="false" scope="instance_level"
   visibility="public_vis">
    <documentation>ChemComp that describes the type of the MolResidue</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:51_00047</valueType>
  </MetaRole>

  <MetaRole name="chemCompVar"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00007"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00044"
   baseName="chemCompVar" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="true"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>ChemCompVar corresponding to MolResidue</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:52_00005</valueType>
  </MetaRole>

  <MetaAttribute name="descriptor"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00017"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00044"
   baseName="descriptor" changeability="frozen" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="1"
   scope="instance_level" visibility="public_vis">
    <documentation>ChemComp descriptor - part of ChemCompVar key. Describes topological variant (e,g, protonation state) of ChemCompVar. For Polymer-type ChemComps (those that have 'next' or 'prev' LinkEnds) also describes non-polymer part of substitution pattern. </documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00033</valueType>
  </MetaAttribute>

  <MetaOperation name="getCcpCode"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00020"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00044"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived attribute ccpCode</documentation>
    <target>www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00015</target>
    <codeStubs>
      <item tag="java">result = getChemComp().getCcpCode();</item>
      <item tag="python">result = self.getByNavigation('chemComp', 'ccpCode')</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="getChemCompVar"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00022"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00044"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived link chemCompVar</documentation>
    <target>www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00007</target>
    <codeStubs>
      <item tag="java">result = getChemComp().findFirstChemCompVar("linking", getLinking(), "descriptor", getDescriptor());</item>
      <item tag="python">result = self.getByNavigation('chemComp', ('chemCompVars', (self.linking, self.descriptor)))</item>
    </codeStubs>
  </MetaOperation>

  <MetaOperation name="getMolType"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00018"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00044"
   isAbstract="false" isImplicit="false" isQuery="true" opType="get"
   scope="instance_level" visibility="public_vis">
    <documentation>getter for derived attribute molType</documentation>
    <target>www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00014</target>
    <codeStubs>
      <item tag="java">result = getChemComp().getMolType();</item>
      <item tag="python">result = self.getByNavigation('chemComp','molType')</item>
    </codeStubs>
  </MetaOperation>

  <MetaAttribute name="linking"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00016"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00044"
   baseName="linking" changeability="frozen" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="1"
   scope="instance_level" visibility="public_vis">
    <documentation>Residue linking code. For polymers distinguishes between terminal (start), terminal (end) and internal residues. For nonpolymers defines substitution pattern. Part of key for ChemCompVar. May be modified after sequence definition. </documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:52_00025</valueType>
  </MetaAttribute>

  <MetaRole name="molResLinkEnds"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00009"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00044"
   baseName="molResLinkEnd" changeability="changeable" hicard="-1"
   hierarchy="child" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <otherRole>www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00008</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00048</valueType>
  </MetaRole>

  <MetaRole name="molSeqFragment"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00001"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00044"
   baseName="molSeqFragment" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="0" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <documentation>MolSeqFragment delimited by MolResidue</documentation>
    <otherRole>www.ccpn.ac.uk_Fogh_2006-08-16-18:23:34_00063</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00045</valueType>
  </MetaRole>

  <MetaAttribute name="molType"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00014"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00044"
   baseName="molType" changeability="frozen" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="true" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="1"
   scope="instance_level" visibility="public_vis">
    <documentation>molType of ChemComp corresponding to MolResidue</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:52_00024</valueType>
  </MetaAttribute>

  <MetaRole name="molecule"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:33_00046"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00044"
   aggregation="composite" baseName="molecule" changeability="frozen" hicard="1"
   hierarchy="parent" isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" noDeleteIfSet="false" partitionsChildren="false"
   scope="instance_level" visibility="public_vis">
    <otherRole>www.ccpn.ac.uk_Fogh_2006-08-16-18:23:33_00047</otherRole>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00039</valueType>
  </MetaRole>

  <MetaAttribute name="seqCode"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00012"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00044"
   baseName="seqCode" changeability="changeable" hicard="1" isAbstract="false"
   isAutomatic="false" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="1"
   scope="instance_level" visibility="public_vis">
    <documentation>The seqCode is the residue number given by the user. For linear polymers normally used to give the position of the residue in the molecule sequence.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00032</valueType>
  </MetaAttribute>

  <MetaAttribute name="seqInsertCode"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00013"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00044"
   baseName="seqInsertCode" changeability="changeable" hicard="1"
   isAbstract="false" isAutomatic="false" isDerived="false"
   isImplementation="false" isImplicit="false" isOrdered="false" isUnique="true"
   locard="1" scope="instance_level" visibility="public_vis">
    <documentation>Sequence insert code - entered by user. Serves to distinguish residues that the user prefers to give the same seqCode. Defaults to a single space.</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00033</valueType>
    <defaultValue>
      <item> </item>
    </defaultValue>
  </MetaAttribute>

  <MetaAttribute name="serial"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00011"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00044"
   baseName="serial" changeability="frozen" hicard="1" isAbstract="false"
   isAutomatic="true" isDerived="false" isImplementation="false"
   isImplicit="false" isOrdered="false" isUnique="true" locard="1"
   scope="instance_level" visibility="public_vis">
    <documentation>Serial number of object. Serves as object main key. Serial numbers of deleted objects are not re-used. Serial numbers can only be set by the implementation. Values are in practice always positive, since negative values are interpreted as a signal to set the next free serial</documentation>
    <valueType>www.ccpn.ac.uk_Fogh_2006-08-16-14:22:53_00032</valueType>
  </MetaAttribute>

  <MetaOperation name="setChemCompVar"
   guid="www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00024"
   container="www.ccpn.ac.uk_Fogh_2006-08-16-14:22:54_00044"
   isAbstract="false" isImplicit="false" isQuery="false" opType="set"
   scope="instance_level" visibility="public_vis">
    <documentation>setter for settable, derived link chemCompVar. NB needed also for backward compatibility with release 1.0b1</documentation>
    <target>www.ccpn.ac.uk_Fogh_2006-08-16-18:23:35_00007</target>
    <codeStubs>
      <item tag="java">ccp.api.molecule.ChemComp.ChemComp cc = getChemComp();

if ((cc != null) &amp;&amp; (cc != value.getChemComp()))
  throw new memops.general.ApiException("molResidue.chemCompVar incompatible with molResidue.chemCompHead");

setLinking(value.getLinking());
setDescriptor(value.getDescriptor());</item>
      <item tag="python">cc = self.chemComp
if cc is not None and cc is not value.chemComp:
  raise ApiError(" molResidue.chemCompVar incompatible with molResidue.chemComp")

self.linking = value.linking
self.descriptor = value.descriptor</item>
    </codeStubs>
  </MetaOperation>
</MetaClass>

